[
  {
    "objectID": "get_account_freq.html",
    "href": "get_account_freq.html",
    "title": "🔁 GET /get_account_freq",
    "section": "",
    "text": "Returns the frequency (such as Monthly, Weekly, etc.) currently assigned to a grandchild account.\n\n\n\n\nMethod: GET\n\nURL: /get_account_freq\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\n\n\n\n\n\nGET /get_account_freq?uuid=acc-7890 HTTP/1.1\nAuthorization: Bearer &lt;your-token&gt;\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-7890\",\n  \"freq\": 30,\n  \"start_time\": \"2025-07-10T16:05:12.003Z\",\n  \"end_time\": \"2025-07-10T16:05:12.020Z\",\n  \"execution_time\": 0.017\n}\n\n\n\n\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing uuid\n\n\n403\nAccount not found or not a grandchild account\n\n\n404\nAccount tree not found or unauthorized access\n\n\n500\nInternal server error\n\n\n\n\n\n\n\n\nThis endpoint is limited to accounts inheriting from GrandchildAccount.\nThe returned frequency is expected to be a predefined label (e.g., 7, 30, 14) based on your internal logic.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Frequency"
    ]
  },
  {
    "objectID": "get_account_freq.html#summary",
    "href": "get_account_freq.html#summary",
    "title": "🔁 GET /get_account_freq",
    "section": "",
    "text": "Method: GET\n\nURL: /get_account_freq\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Frequency"
    ]
  },
  {
    "objectID": "get_account_freq.html#headers",
    "href": "get_account_freq.html#headers",
    "title": "🔁 GET /get_account_freq",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Frequency"
    ]
  },
  {
    "objectID": "get_account_freq.html#query-parameters",
    "href": "get_account_freq.html#query-parameters",
    "title": "🔁 GET /get_account_freq",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Frequency"
    ]
  },
  {
    "objectID": "get_account_freq.html#example-request",
    "href": "get_account_freq.html#example-request",
    "title": "🔁 GET /get_account_freq",
    "section": "",
    "text": "GET /get_account_freq?uuid=acc-7890 HTTP/1.1\nAuthorization: Bearer &lt;your-token&gt;\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-7890\",\n  \"freq\": 30,\n  \"start_time\": \"2025-07-10T16:05:12.003Z\",\n  \"end_time\": \"2025-07-10T16:05:12.020Z\",\n  \"execution_time\": 0.017\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Frequency"
    ]
  },
  {
    "objectID": "get_account_freq.html#error-responses",
    "href": "get_account_freq.html#error-responses",
    "title": "🔁 GET /get_account_freq",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing uuid\n\n\n403\nAccount not found or not a grandchild account\n\n\n404\nAccount tree not found or unauthorized access\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Frequency"
    ]
  },
  {
    "objectID": "get_account_freq.html#notes",
    "href": "get_account_freq.html#notes",
    "title": "🔁 GET /get_account_freq",
    "section": "",
    "text": "This endpoint is limited to accounts inheriting from GrandchildAccount.\nThe returned frequency is expected to be a predefined label (e.g., 7, 30, 14) based on your internal logic.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Frequency"
    ]
  },
  {
    "objectID": "get_account_freq.html#sponsors",
    "href": "get_account_freq.html#sponsors",
    "title": "🔁 GET /get_account_freq",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Frequency"
    ]
  },
  {
    "objectID": "change_account_status.html",
    "href": "change_account_status.html",
    "title": "🔄 POST /change_account_status",
    "section": "",
    "text": "Changes the status of a child or grandchild account. Main or parent accounts are not eligible for this operation.\n\n\n\n\nMethod: POST\nURL: /change_account_status\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to update\n\n\nstatus\nstring\n✅\nNew status to apply: \"active\", \"inactive\", or \"closed\"\n\n\n\n\n\n\n\n{\n  \"uuid\": \"abc123-child-account\",\n  \"status\": \"inactive\"\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"abc123-child-account\",\n  \"new_status\": \"inactive\",\n  \"message\": \"Account Rent status updated to inactive\",\n  \"start_time\": \"2025-07-10T07:10:10.003Z\",\n  \"end_time\": \"2025-07-10T07:10:10.022Z\",\n  \"execution_time\": 0.019\n}\n\n\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing parameters or invalid status value\n\n\n403\nAttempt to change a non-child account or unauthorized access\n\n\n404\nAccount not found\n\n\n500\nUnexpected server error\n\n\n\n\n\n\n\nStatus transitions may impact how funds are allocated (e.g., inactive sub-accounts stop drawing allocations).\nOnly accounts inheriting from ChildAccount class are eligible.\nThis endpoint is locked via with_account_lock() to prevent race conditions during status changes.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Change Account Status"
    ]
  },
  {
    "objectID": "change_account_status.html#summary",
    "href": "change_account_status.html#summary",
    "title": "🔄 POST /change_account_status",
    "section": "",
    "text": "Method: POST\nURL: /change_account_status\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Change Account Status"
    ]
  },
  {
    "objectID": "change_account_status.html#headers",
    "href": "change_account_status.html#headers",
    "title": "🔄 POST /change_account_status",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Change Account Status"
    ]
  },
  {
    "objectID": "change_account_status.html#request-body-parameters",
    "href": "change_account_status.html#request-body-parameters",
    "title": "🔄 POST /change_account_status",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to update\n\n\nstatus\nstring\n✅\nNew status to apply: \"active\", \"inactive\", or \"closed\"",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Change Account Status"
    ]
  },
  {
    "objectID": "change_account_status.html#example-request",
    "href": "change_account_status.html#example-request",
    "title": "🔄 POST /change_account_status",
    "section": "",
    "text": "{\n  \"uuid\": \"abc123-child-account\",\n  \"status\": \"inactive\"\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Change Account Status"
    ]
  },
  {
    "objectID": "change_account_status.html#success-response",
    "href": "change_account_status.html#success-response",
    "title": "🔄 POST /change_account_status",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"abc123-child-account\",\n  \"new_status\": \"inactive\",\n  \"message\": \"Account Rent status updated to inactive\",\n  \"start_time\": \"2025-07-10T07:10:10.003Z\",\n  \"end_time\": \"2025-07-10T07:10:10.022Z\",\n  \"execution_time\": 0.019\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Change Account Status"
    ]
  },
  {
    "objectID": "change_account_status.html#error-responses",
    "href": "change_account_status.html#error-responses",
    "title": "🔄 POST /change_account_status",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing parameters or invalid status value\n\n\n403\nAttempt to change a non-child account or unauthorized access\n\n\n404\nAccount not found\n\n\n500\nUnexpected server error",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Change Account Status"
    ]
  },
  {
    "objectID": "change_account_status.html#notes",
    "href": "change_account_status.html#notes",
    "title": "🔄 POST /change_account_status",
    "section": "",
    "text": "Status transitions may impact how funds are allocated (e.g., inactive sub-accounts stop drawing allocations).\nOnly accounts inheriting from ChildAccount class are eligible.\nThis endpoint is locked via with_account_lock() to prevent race conditions during status changes.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Change Account Status"
    ]
  },
  {
    "objectID": "change_account_status.html#sponsors",
    "href": "change_account_status.html#sponsors",
    "title": "🔄 POST /change_account_status",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Change Account Status"
    ]
  },
  {
    "objectID": "walking_amount.html",
    "href": "walking_amount.html",
    "title": "📈 GET /walking_amount",
    "section": "",
    "text": "Returns the “walking amount” (cumulative total) of either amount_due or balance for a given account and its children across a date range.\n\n\n\n\nMethod: GET\nURL: /walking_amount\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account\n\n\namt_type\nstring\n❌\nType of amount to walk: \"amount_due\" or \"balance\" (default: \"amount_due\")\n\n\nfrom\nstring\n❌\nStart date in YYYY-MM-DD format (default: very early date)\n\n\nto\nstring\n❌\nEnd date in YYYY-MM-DD format (default: today)\n\n\n\n\n\n\n\nGET /walking_amount?uuid=acc-2024-xyz&amt_type=balance&from=2024-01-01&to=2024-12-31\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-xyz\",\n  \"amt_type\": \"balance\",\n  \"from\": \"2024-01-01\",\n  \"to\": \"2024-12-31\",\n  \"walking_amount\": [\n    {\n      \"date\": \"2024-01-01\",\n      \"value\": 0\n    },\n    {\n      \"date\": \"2024-01-15\",\n      \"value\": 1200\n    },\n    {\n      \"date\": \"2024-02-01\",\n      \"value\": 2000\n    }\n    // ...\n  ],\n  \"start_time\": \"2025-07-10T07:00:01.003Z\",\n  \"end_time\": \"2025-07-10T07:00:01.023Z\",\n  \"execution_time\": 0.02\n}\n\n\n\n\n\n\nStatus\nCause\n\n\n\n\n400\nUUID or date params are missing/invalid\n\n\n403\nAccount not found or unauthorized\n\n\n404\nTree or user not found\n\n\n500\nInternal processing error\n\n\n\n\n\n\n\nUse amt_type = “amount_due” to get cumulative liabilities (default).\nUse amt_type = “balance” to visualize asset accumulation.\nUnder the hood, uses account$walking_amount(amt_type, daterange).\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Walking Amount"
    ]
  },
  {
    "objectID": "walking_amount.html#summary",
    "href": "walking_amount.html#summary",
    "title": "📈 GET /walking_amount",
    "section": "",
    "text": "Method: GET\nURL: /walking_amount\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Walking Amount"
    ]
  },
  {
    "objectID": "walking_amount.html#headers",
    "href": "walking_amount.html#headers",
    "title": "📈 GET /walking_amount",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Walking Amount"
    ]
  },
  {
    "objectID": "walking_amount.html#query-parameters",
    "href": "walking_amount.html#query-parameters",
    "title": "📈 GET /walking_amount",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account\n\n\namt_type\nstring\n❌\nType of amount to walk: \"amount_due\" or \"balance\" (default: \"amount_due\")\n\n\nfrom\nstring\n❌\nStart date in YYYY-MM-DD format (default: very early date)\n\n\nto\nstring\n❌\nEnd date in YYYY-MM-DD format (default: today)",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Walking Amount"
    ]
  },
  {
    "objectID": "walking_amount.html#example-request",
    "href": "walking_amount.html#example-request",
    "title": "📈 GET /walking_amount",
    "section": "",
    "text": "GET /walking_amount?uuid=acc-2024-xyz&amt_type=balance&from=2024-01-01&to=2024-12-31",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Walking Amount"
    ]
  },
  {
    "objectID": "walking_amount.html#success-response",
    "href": "walking_amount.html#success-response",
    "title": "📈 GET /walking_amount",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-xyz\",\n  \"amt_type\": \"balance\",\n  \"from\": \"2024-01-01\",\n  \"to\": \"2024-12-31\",\n  \"walking_amount\": [\n    {\n      \"date\": \"2024-01-01\",\n      \"value\": 0\n    },\n    {\n      \"date\": \"2024-01-15\",\n      \"value\": 1200\n    },\n    {\n      \"date\": \"2024-02-01\",\n      \"value\": 2000\n    }\n    // ...\n  ],\n  \"start_time\": \"2025-07-10T07:00:01.003Z\",\n  \"end_time\": \"2025-07-10T07:00:01.023Z\",\n  \"execution_time\": 0.02\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Walking Amount"
    ]
  },
  {
    "objectID": "walking_amount.html#error-responses",
    "href": "walking_amount.html#error-responses",
    "title": "📈 GET /walking_amount",
    "section": "",
    "text": "Status\nCause\n\n\n\n\n400\nUUID or date params are missing/invalid\n\n\n403\nAccount not found or unauthorized\n\n\n404\nTree or user not found\n\n\n500\nInternal processing error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Walking Amount"
    ]
  },
  {
    "objectID": "walking_amount.html#notes",
    "href": "walking_amount.html#notes",
    "title": "📈 GET /walking_amount",
    "section": "",
    "text": "Use amt_type = “amount_due” to get cumulative liabilities (default).\nUse amt_type = “balance” to visualize asset accumulation.\nUnder the hood, uses account$walking_amount(amt_type, daterange).",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Walking Amount"
    ]
  },
  {
    "objectID": "walking_amount.html#sponsors",
    "href": "walking_amount.html#sponsors",
    "title": "📈 GET /walking_amount",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Walking Amount"
    ]
  },
  {
    "objectID": "spending.html",
    "href": "spending.html",
    "title": "💸 GET /spending",
    "section": "",
    "text": "Calculates the total amount withdrawn (spent) from a given account (and its sub-accounts) within a specified date range.\n\n\n\n\nMethod: GET\nURL: /spending\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to evaluate\n\n\nfrom\nstring\n❌\nStart date (YYYY-MM-DD). Defaults to oldest date\n\n\nto\nstring\n❌\nEnd date (YYYY-MM-DD). Defaults to today\n\n\n\n\n\n\n\nGET /spending?uuid=acc-2024-001&from=2025-01-01&to=2025-07-01\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-001\",\n  \"from\": \"2025-01-01\",\n  \"to\": \"2025-07-01\",\n  \"total_spending\": 24950,\n  \"start_time\": \"2025-07-10T14:01:02.830Z\",\n  \"end_time\": \"2025-07-10T14:01:02.884Z\",\n  \"execution_time\": 0.054\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nMissing UUID or invalid date\n\n\n403\nUnauthorized access\n\n\n404\nAccount not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\nInternally uses account$spending(daterange) method.\nIf no from or to is specified, defaults to entire available history.\nSpending only includes withdrawal-type transactions.\n\n\n\n\n## 💖 Sponsors\n\n\nSupport my work through GitHub Sponsors!\n\n\n\n\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Spending Overview"
    ]
  },
  {
    "objectID": "spending.html#summary",
    "href": "spending.html#summary",
    "title": "💸 GET /spending",
    "section": "",
    "text": "Method: GET\nURL: /spending\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Spending Overview"
    ]
  },
  {
    "objectID": "spending.html#headers",
    "href": "spending.html#headers",
    "title": "💸 GET /spending",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Spending Overview"
    ]
  },
  {
    "objectID": "spending.html#request-parameters",
    "href": "spending.html#request-parameters",
    "title": "💸 GET /spending",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to evaluate\n\n\nfrom\nstring\n❌\nStart date (YYYY-MM-DD). Defaults to oldest date\n\n\nto\nstring\n❌\nEnd date (YYYY-MM-DD). Defaults to today",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Spending Overview"
    ]
  },
  {
    "objectID": "spending.html#example-request",
    "href": "spending.html#example-request",
    "title": "💸 GET /spending",
    "section": "",
    "text": "GET /spending?uuid=acc-2024-001&from=2025-01-01&to=2025-07-01",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Spending Overview"
    ]
  },
  {
    "objectID": "spending.html#success-response",
    "href": "spending.html#success-response",
    "title": "💸 GET /spending",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-001\",\n  \"from\": \"2025-01-01\",\n  \"to\": \"2025-07-01\",\n  \"total_spending\": 24950,\n  \"start_time\": \"2025-07-10T14:01:02.830Z\",\n  \"end_time\": \"2025-07-10T14:01:02.884Z\",\n  \"execution_time\": 0.054\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Spending Overview"
    ]
  },
  {
    "objectID": "spending.html#failure-response-examples",
    "href": "spending.html#failure-response-examples",
    "title": "💸 GET /spending",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nMissing UUID or invalid date\n\n\n403\nUnauthorized access\n\n\n404\nAccount not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Spending Overview"
    ]
  },
  {
    "objectID": "spending.html#notes",
    "href": "spending.html#notes",
    "title": "💸 GET /spending",
    "section": "",
    "text": "Internally uses account$spending(daterange) method.\nIf no from or to is specified, defaults to entire available history.\nSpending only includes withdrawal-type transactions.\n\n\n\n\n## 💖 Sponsors\n\n\nSupport my work through GitHub Sponsors!",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Spending Overview"
    ]
  },
  {
    "objectID": "spending.html#sponsors",
    "href": "spending.html#sponsors",
    "title": "💸 GET /spending",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Spending Overview"
    ]
  },
  {
    "objectID": "register.html",
    "href": "register.html",
    "title": "👤 POST /register",
    "section": "",
    "text": "Creates a new user account tree. Requires a valid user_id. Returns confirmation of successful user creation or appropriate error message.\n\n\n\n\nMethod: POST\nURL: /register\nAuth: Not Required\nTag: admin\n\n\n\n\n\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuser_id\nstring\n✅\nUnique ID for the user (e.g., UUID)\n\n\n\n\n\n\n\n{\n  \"user_id\": \"4a76343a-e971-4bd7-b8c4-5fa9fccee433\"\n}\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 201,\n  \"message\": \"User directory created\",\n  \"user_id\": \"4a76343a-e971-4bd7-b8c4-5fa9fccee433\",\n  \"start_time\": \"2025-07-17T08:32:00.511Z\",\n  \"end_time\": \"2025-07-17T08:32:00.543Z\",\n  \"execution_time\": 0.032\n}\n\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nMissing required user_id\n\n\n400\nInvalid user ID format\n\n\n409\nUser already exists\n\n\n500\nInternal server error\n\n\n\n\n\n\n\n\nuser_id must be a valid string identifier (UUIDs recommended).\nUser ID is sanitized and used to generate a secure directory structure.\nNo JWT token required, but rate limiting and exponential backoff are applied to prevent abuse.\nThe request is fast and designed for one-time setup per user.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Register"
    ]
  },
  {
    "objectID": "register.html#summary",
    "href": "register.html#summary",
    "title": "👤 POST /register",
    "section": "",
    "text": "Method: POST\nURL: /register\nAuth: Not Required\nTag: admin",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Register"
    ]
  },
  {
    "objectID": "register.html#headers",
    "href": "register.html#headers",
    "title": "👤 POST /register",
    "section": "",
    "text": "Content-Type: application/json",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Register"
    ]
  },
  {
    "objectID": "register.html#request-parameters",
    "href": "register.html#request-parameters",
    "title": "👤 POST /register",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuser_id\nstring\n✅\nUnique ID for the user (e.g., UUID)",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Register"
    ]
  },
  {
    "objectID": "register.html#example-request-body-json",
    "href": "register.html#example-request-body-json",
    "title": "👤 POST /register",
    "section": "",
    "text": "{\n  \"user_id\": \"4a76343a-e971-4bd7-b8c4-5fa9fccee433\"\n}",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Register"
    ]
  },
  {
    "objectID": "register.html#success-response",
    "href": "register.html#success-response",
    "title": "👤 POST /register",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 201,\n  \"message\": \"User directory created\",\n  \"user_id\": \"4a76343a-e971-4bd7-b8c4-5fa9fccee433\",\n  \"start_time\": \"2025-07-17T08:32:00.511Z\",\n  \"end_time\": \"2025-07-17T08:32:00.543Z\",\n  \"execution_time\": 0.032\n}",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Register"
    ]
  },
  {
    "objectID": "register.html#failure-response-examples",
    "href": "register.html#failure-response-examples",
    "title": "👤 POST /register",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nMissing required user_id\n\n\n400\nInvalid user ID format\n\n\n409\nUser already exists\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Register"
    ]
  },
  {
    "objectID": "register.html#notes",
    "href": "register.html#notes",
    "title": "👤 POST /register",
    "section": "",
    "text": "user_id must be a valid string identifier (UUIDs recommended).\nUser ID is sanitized and used to generate a secure directory structure.\nNo JWT token required, but rate limiting and exponential backoff are applied to prevent abuse.\nThe request is fast and designed for one-time setup per user.",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Register"
    ]
  },
  {
    "objectID": "register.html#sponsors",
    "href": "register.html#sponsors",
    "title": "👤 POST /register",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Register"
    ]
  },
  {
    "objectID": "articles/overview.html",
    "href": "articles/overview.html",
    "title": "Finance Manager API: Overview",
    "section": "",
    "text": "This vignette provides an overview of how to interact with the Finance Manager API from R. It demonstrates how to simulate client interactions such as account registration, login, and balance queries."
  },
  {
    "objectID": "articles/overview.html#background",
    "href": "articles/overview.html#background",
    "title": "Finance Manager API: Overview",
    "section": "",
    "text": "This vignette provides an overview of how to interact with the Finance Manager API from R. It demonstrates how to simulate client interactions such as account registration, login, and balance queries."
  },
  {
    "objectID": "articles/overview.html#api-set-up",
    "href": "articles/overview.html#api-set-up",
    "title": "Finance Manager API: Overview",
    "section": "API set up",
    "text": "API set up\nThis part is only needed if the API is not hosted. Since the server is not deployed publicly, we start the API server locally in the background using the callr package. This lets us send HTTP requests to the locally running server just like a real client would.\n\nFirst set up the env variables\n\ntmp_dir &lt;- tempfile(\"test-api-deposit-\") \ndir.create(tmp_dir, recursive = TRUE)    # creating a temporally accounts folder\n                                         # this will be permanent dir on deployment\nSys.setenv(ACCOUNT_BASE_DIR = tmp_dir)   # use tempfile to avoid contamination\nSys.setenv(ACCOUNT_BACKEND = \"file\")     # default storage backend(local dir)\nSys.setenv(MAX_REQUESTS = 1000)          # maximum requests per rate limit\nSys.setenv(WINDOW_SIZE = 3600)           # rate limit window size\nSys.setenv(JWT_SECRET = \"test-secret\")   # secret Key for signing tokens\nsecret_key &lt;- Sys.getenv(\"JWT_SECRET\")\n\n\n\nFunction to listen if server is live\nThis function pings the server after every 0.1 seconds with a timeout of 80 seconds to establish if its live. Its a way to avoid sending request when server is not live.\n\nwait_for_server_ready &lt;- function(\n  url = \"http://127.0.0.1:8000/__ping__\",\n  timeout = 40\n) {\n  start_time &lt;- Sys.time()\n  while (as.numeric(Sys.time() - start_time, units = \"secs\") &lt; timeout) {\n    res &lt;- tryCatch(httr::GET(url), error = function(e) NULL)\n    if (!is.null(res) && httr::status_code(res) == 200) return(TRUE)\n    Sys.sleep(0.10)\n  }\n  stop(\"Server did not become ready within timeout.\")\n}\n\n\n\nSpin up the server\nSpin up the server on background but capture both std output and stderr for debugging. &gt; This approach is ideal for testing and documenting the API without requiring a live deployment.\n\nlog_out &lt;- tempfile(\"server-out-\", fileext = \".log\")\nlog_err &lt;- tempfile(\"server-err-\", fileext = \".log\")\n\nserver &lt;- callr::r_bg(\n  function(main_file, jwt, base_dir, project_dir) {\n    setwd(project_dir)\n    Sys.setenv(JWT_SECRET = jwt)\n    Sys.setenv(ACCOUNT_BASE_DIR = base_dir)\n    Sys.setenv(ACCOUNT_BACKEND = \"file\")\n    source(main_file)\n  },\n  args = list(\n    main_file = here(\"api\", \"main.R\"),\n    jwt = secret_key,\n    base_dir = tmp_dir,\n    project_dir = here()\n  ),\n  stdout = log_out,\n  stderr = log_err\n)\n\n\nwithr::defer({\n  if (server$is_alive()) server$kill()\n  cat(\"📤 Server stdout:\\n\")\n  cat(readLines(log_out, warn = FALSE), sep = \"\\n\")\n  cat(\"\\n📥 Server stderr:\\n\")\n  cat(readLines(log_err, warn = FALSE), sep = \"\\n\")\n}, envir = parent.frame())\n\n📤 Server stdout:\n\n\n📥 Server stderr:\n\n\n\n\nWait for the server to be ready.\n\nwait_for_server_ready(\"http://127.0.0.1:8000/__ping__\")\n\n[1] TRUE"
  },
  {
    "objectID": "articles/overview.html#interact-with-the-server.",
    "href": "articles/overview.html#interact-with-the-server.",
    "title": "Finance Manager API: Overview",
    "section": "Interact with the server.",
    "text": "Interact with the server.\nThis is where where to start if the server is hosted.\n\ncreate auth token\nYou need to a signed JWT authorization token to access the API. this API being part of backend it is assumed when users are signed in from the front end they are granted the auth token below.\n\nuser_id =uuid::UUIDgenerate()                 # generate a user id\ntoken &lt;- jwt_encode_hmac(\n  jwt_claim(user_id = user_id, role = \"user\"),\n  secret = secret_key\n)\n\n\n\n1) create account.\ncreate a user account. this will return the base/root account.\n\n  res &lt;- POST(\n    url = \"http://127.0.0.1:8000/register\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    body = list(user_id = user_id),\n    encode = \"json\"\n  )\n  parsed &lt;- jsonlite::fromJSON(rawToChar(res$content))\n  print(parsed)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$user_id\n[1] \"7dc0b8f9-ed3e-4341-ace6-54d3541da2a1\"\n\n$uuid\n[1] \"acc4946b6e3-207c-4e63-af73-4716e39ac681\"\n\n$start_time\n[1] \"2025-09-23T07:49:02.871Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:03.174Z\"\n\n$execution_time\n[1] 0.3033\n\n\n\n\ncheck account balance\n\nlets see the balance of the created account\n\n\n  res1 &lt;- httr::GET(\n    url = \"http://127.0.0.1:8000/get_balance\",\n    query = list(uuid = parsed$uuid),\n    httr::add_headers(Authorization = paste(\"Bearer\", token))\n  )\n  parsed1 &lt;- jsonlite::fromJSON(rawToChar(res1$content))\n  print(parsed1)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$uuid\n[1] \"acc4946b6e3-207c-4e63-af73-4716e39ac681\"\n\n$balance\n[1] 0\n\n$start_time\n[1] \"2025-09-23T07:49:03.232Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:03.465Z\"\n\n$execution_time\n[1] 0.2328\n\n\n\n\nsee transaction list\ncurrently the account has no transactions\n\n  res1 &lt;- httr::GET(\n    url = \"http://127.0.0.1:8000/get_transactions\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    query = list(uuid = parsed$uuid)\n  )\n  parsed1 &lt;- jsonlite::fromJSON(rawToChar(res1$content))\n  print(parsed1)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$uuid\n[1] \"acc4946b6e3-207c-4e63-af73-4716e39ac681\"\n\n$transaction_count\n[1] 0\n\n$transactions\nlist()\n\n$start_time\n[1] \"2025-09-23T07:49:03.523Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:03.752Z\"\n\n$execution_time\n[1] 0.2294\n\n\n\n\nlist child accounts\ncurrently we havent added any child\n\n  res1 &lt;- httr::GET(\n    url = \"http://127.0.0.1:8000/list_child_accounts\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    query = list(uuid = parsed$uuid)\n  )\n  parsed1 &lt;- jsonlite::fromJSON(rawToChar(res1$content))\n  print(parsed1)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$uuid\n[1] \"acc4946b6e3-207c-4e63-af73-4716e39ac681\"\n\n$account_name\n[1] \"Main\"\n\n$child_account_names\nlist()\n\n$child_count\n[1] 0\n\n$start_time\n[1] \"2025-09-23T07:49:03.810Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:04.050Z\"\n\n$execution_time\n[1] 0.2398\n\n\n\n\nattach child accounts\nAttaching child accounts\n\nres1 &lt;- httr::POST(\n    url = \"http://127.0.0.1:8000/add_sub_account\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    encode = \"json\",\n    body = list(\n      parent_uuid = parsed$uuid,\n      name = \"Needs\",\n      allocation = 0.5\n    )\n  )\n  parsed1 &lt;- jsonlite::fromJSON(rawToChar(res1$content))\n  print(parsed1)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$message\n[1] \"Needs added under Main\"\n\n$uuid\n[1] \"acce4ec167e-df3b-4c9c-9dac-610ca08ad4b3\"\n\n$child_type\n[1] \"ChildAccount\"\n\n$allocation\n[1] 0.5\n\n$start_time\n[1] \"2025-09-23T07:49:04.111Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:04.639Z\"\n\n$execution_time\n[1] 0.5284\n\nres2 &lt;- httr::POST(\n    url = \"http://127.0.0.1:8000/add_sub_account\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    encode = \"json\",\n    body = list(\n      parent_uuid = parsed$uuid,\n      name = \"Wants\",\n      allocation = 0.3\n    )\n  )\n  parsed2 &lt;- jsonlite::fromJSON(rawToChar(res2$content))\n  print(parsed2)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$message\n[1] \"Wants added under Main\"\n\n$uuid\n[1] \"accba850773-f1fd-4190-8cab-05172af98332\"\n\n$child_type\n[1] \"ChildAccount\"\n\n$allocation\n[1] 0.3\n\n$start_time\n[1] \"2025-09-23T07:49:04.689Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:05.212Z\"\n\n$execution_time\n[1] 0.5229\n\nres3 &lt;- httr::POST(\n    url = \"http://127.0.0.1:8000/add_sub_account\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    encode = \"json\",\n    body = list(\n      parent_uuid = parsed$uuid,\n      name = \"Savings\",\n      allocation = 0.2\n    )\n  )\n  parsed3 &lt;- jsonlite::fromJSON(rawToChar(res3$content))\n  print(parsed3)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$message\n[1] \"Savings added under Main\"\n\n$uuid\n[1] \"acc5194696a-21a9-4f49-8018-133ffb4ea0cd\"\n\n$child_type\n[1] \"ChildAccount\"\n\n$allocation\n[1] 0.2\n\n$start_time\n[1] \"2025-09-23T07:49:05.262Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:05.786Z\"\n\n$execution_time\n[1] 0.5238\n\n\n\n\ndeposit to main\n\nres4 &lt;- httr::POST(\n    url = \"http://127.0.0.1:8000/deposit\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    body = list(uuid = parsed$uuid, amount = 40000, channel = \"ABSA bank\"),\n    encode = \"form\"\n  )\n  parsed4 &lt;- jsonlite::fromJSON(rawToChar(res4$content))\nprint(parsed4)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$account_uuid\n[1] \"acc4946b6e3-207c-4e63-af73-4716e39ac681\"\n\n$amount\n[1] 40000\n\n$balance\n[1] 0\n\n$start_time\n[1] \"2025-09-23T07:49:05.848Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:06.310Z\"\n\n$execution_time\n[1] 0.4616\n\n\n\nres4 &lt;- httr::POST(\n    url = \"http://127.0.0.1:8000/deposit\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    body = list(uuid = parsed1$uuid, amount = 20000, channel = \"Stanbic bank\"),\n    encode = \"form\"\n  )\n  parsed4 &lt;- jsonlite::fromJSON(rawToChar(res4$content))\nprint(parsed4)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$account_uuid\n[1] \"acce4ec167e-df3b-4c9c-9dac-610ca08ad4b3\"\n\n$amount\n[1] 20000\n\n$balance\n[1] 40000\n\n$start_time\n[1] \"2025-09-23T07:49:06.366Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:06.829Z\"\n\n$execution_time\n[1] 0.4631\n\n\n\n\nWithdraw from needs account\n\n  res5 &lt;- httr::POST(\n    url = \"http://127.0.0.1:8000/withdraw\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    body = list(uuid = parsed1$uuid, amount = 20000, channel = \"mpesa\"),\n    encode = \"form\"\n  )\n  parsed5 &lt;- jsonlite::fromJSON(rawToChar(res5$content))\n  print(parsed5)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$account_uuid\n[1] \"acce4ec167e-df3b-4c9c-9dac-610ca08ad4b3\"\n\n$balance\n[1] 20000\n\n$start_time\n[1] \"2025-09-23T07:49:06.886Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:07.378Z\"\n\n$execution_time\n[1] 0.4923\n\n\n\n\nCheck needs balance\n\n  res6 &lt;- httr::GET(\n    url = \"http://127.0.0.1:8000/get_balance\",\n    query = list(uuid = parsed1$uuid),\n    httr::add_headers(Authorization = paste(\"Bearer\", token))\n  )\n  parsed6 &lt;- jsonlite::fromJSON(rawToChar(res6$content))\n  print(parsed6)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$uuid\n[1] \"acce4ec167e-df3b-4c9c-9dac-610ca08ad4b3\"\n\n$balance\n[1] 20000\n\n$start_time\n[1] \"2025-09-23T07:49:07.435Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:07.658Z\"\n\n$execution_time\n[1] 0.2226\n\n\n\n\ncompute total balance\n\n  res7 &lt;- httr::GET(\n    url = \"http://127.0.0.1:8000/compute_total_balance\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    query = list(uuid = parsed$uuid)\n  )\n  parsed7 &lt;- jsonlite::fromJSON(rawToChar(res7$content))\n  print(parsed7)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$uuid\n[1] \"acc4946b6e3-207c-4e63-af73-4716e39ac681\"\n\n$total_balance\n[1] 40000\n\n$start_time\n[1] \"2025-09-23T07:49:07.714Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:07.951Z\"\n\n$execution_time\n[1] 0.2372\n\n\n\n\ncompute total due\n\n  res8 &lt;- httr::GET(\n    url = \"http://127.0.0.1:8000/compute_total_due\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    query = list(uuid = parsed$uuid)\n    \n  )\nparsed8 &lt;- jsonlite::fromJSON(rawToChar(res8$content))\nprint(parsed8)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$uuid\n[1] \"acc4946b6e3-207c-4e63-af73-4716e39ac681\"\n\n$total_due\n[1] 0\n\n$start_time\n[1] \"2025-09-23T07:49:08.008Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:08.245Z\"\n\n$execution_time\n[1] 0.2371\n\n\n\n\ncompute total income\n\n  res9 &lt;- httr::GET(\n    url = \"http://127.0.0.1:8000/total_income\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    query = list(uuid = parsed$uuid)\n  )\n  parsed9 &lt;- jsonlite::fromJSON(rawToChar(res9$content))\n  print(parsed9)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$uuid\n[1] \"acc4946b6e3-207c-4e63-af73-4716e39ac681\"\n\n$from\n[1] \"2025-09-23 07:49:08.302419\"\n\n$to\n[1] \"2025-09-23 07:49:08.30243\"\n\n$total_income\n[1] 0\n\n$start_time\n[1] \"2025-09-23T07:49:08.302Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:08.567Z\"\n\n$execution_time\n[1] 0.2652\n\n\n\n\nTotal spend\n\n  res11 &lt;- httr::GET(\n    url = \"http://127.0.0.1:8000/spending\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    query = list(uuid = parsed$uuid)\n  )\n  parsed11 &lt;- jsonlite::fromJSON(rawToChar(res11$content))\n  print(parsed11)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$uuid\n[1] \"acc4946b6e3-207c-4e63-af73-4716e39ac681\"\n\n$from\n[1] \"1026-05-24\"\n\n$to\n[1] \"2025-09-23\"\n\n$total_spending\n[1] 20000\n\n$start_time\n[1] \"2025-09-23T07:49:08.626Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:08.892Z\"\n\n$execution_time\n[1] 0.2656\n\n\n\n\nIncome utilization\n\n  res10 &lt;- httr::GET(\n    url = \"http://127.0.0.1:8000/income_utilization\",\n    httr::add_headers(Authorization = paste(\"Bearer\", token)),\n    query = list(uuid = parsed$uuid)\n  )\n  parsed10 &lt;- jsonlite::fromJSON(rawToChar(res10$content))\n  print(parsed10)\n\n$success\n[1] TRUE\n\n$status\n[1] 200\n\n$uuid\n[1] \"acc4946b6e3-207c-4e63-af73-4716e39ac681\"\n\n$from\n[1] \"2025-09-23 07:49:08.949651\"\n\n$to\n[1] \"2025-09-23 07:49:08.949662\"\n\n$utilization\n[1] 0\n\n$start_time\n[1] \"2025-09-23T07:49:08.949Z\"\n\n$end_time\n[1] \"2025-09-23T07:49:09.289Z\"\n\n$execution_time\n[1] 0.3399"
  },
  {
    "objectID": "locust-results-Nginx-x.html",
    "href": "locust-results-Nginx-x.html",
    "title": "Behind Nginx (3 Instances)",
    "section": "",
    "text": "&gt; 💡 **Note:** R has a limit on the number of simultaneous connections:\n&gt;\n&gt; - **Up to R version 4.4.0**: The maximum is **128 connections**.\n&gt; - **R version 4.4.1 and above**: Increased to **4096 connections**.\n&gt;\n&gt; When using `future_promise()` or running multiple APIs concurrently (e.g., 3 instances behind Nginx in the same environment), you may quickly hit these limits — especially under heavy load. Consider adjusting or distributing instances if needed."
  },
  {
    "objectID": "get_due_date.html",
    "href": "get_due_date.html",
    "title": "📅 GET /get_due_date",
    "section": "",
    "text": "Retrieves the due date set for a grandchild account. This is useful for determining deadlines such as rent, bills, or recurring payments.\n\n\n\n\nMethod: GET\n\nURL: /get_due_date\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\n\n\n\n\n\nGET /get_due_date?uuid=acc-5678\nAuthorization: Bearer &lt;your-token&gt;\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-5678\",\n  \"due_date\": \"2025-08-15 00:00:00\",\n  \"start_time\": \"2025-07-10T11:00:00.012Z\",\n  \"end_time\": \"2025-07-10T11:00:00.020Z\",\n  \"execution_time\": 0.008\n}\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nUUID is missing\n\n\n403\nAccount is not a grandchild or unauthorized access\n\n\n404\nAccount tree or account not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\n\nOnly accounts that inherit from GrandchildAccount will return a valid due date.\nThe due date is returned as a string in standard POSIX format.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Due Date"
    ]
  },
  {
    "objectID": "get_due_date.html#summary",
    "href": "get_due_date.html#summary",
    "title": "📅 GET /get_due_date",
    "section": "",
    "text": "Method: GET\n\nURL: /get_due_date\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Due Date"
    ]
  },
  {
    "objectID": "get_due_date.html#headers",
    "href": "get_due_date.html#headers",
    "title": "📅 GET /get_due_date",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Due Date"
    ]
  },
  {
    "objectID": "get_due_date.html#query-parameters",
    "href": "get_due_date.html#query-parameters",
    "title": "📅 GET /get_due_date",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Due Date"
    ]
  },
  {
    "objectID": "get_due_date.html#example-request",
    "href": "get_due_date.html#example-request",
    "title": "📅 GET /get_due_date",
    "section": "",
    "text": "GET /get_due_date?uuid=acc-5678\nAuthorization: Bearer &lt;your-token&gt;\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-5678\",\n  \"due_date\": \"2025-08-15 00:00:00\",\n  \"start_time\": \"2025-07-10T11:00:00.012Z\",\n  \"end_time\": \"2025-07-10T11:00:00.020Z\",\n  \"execution_time\": 0.008\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Due Date"
    ]
  },
  {
    "objectID": "get_due_date.html#error-responses",
    "href": "get_due_date.html#error-responses",
    "title": "📅 GET /get_due_date",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nUUID is missing\n\n\n403\nAccount is not a grandchild or unauthorized access\n\n\n404\nAccount tree or account not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Due Date"
    ]
  },
  {
    "objectID": "get_due_date.html#notes",
    "href": "get_due_date.html#notes",
    "title": "📅 GET /get_due_date",
    "section": "",
    "text": "Only accounts that inherit from GrandchildAccount will return a valid due date.\nThe due date is returned as a string in standard POSIX format.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Due Date"
    ]
  },
  {
    "objectID": "get_due_date.html#sponsors",
    "href": "get_due_date.html#sponsors",
    "title": "📅 GET /get_due_date",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Due Date"
    ]
  },
  {
    "objectID": "income_utilization.html",
    "href": "income_utilization.html",
    "title": "📊 GET /income_utilization",
    "section": "",
    "text": "Computes how much of the income was spent within a given date range for a specific account and its children.\n\n\n\n\nMethod: GET\nURL: /income_utilization\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account\n\n\nfrom\nstring\n❌\nStart date (YYYY-MM-DD). Defaults to earliest date\n\n\nto\nstring\n❌\nEnd date (YYYY-MM-DD). Defaults to today\n\n\n\n\n\n\n\nGET /income_utilization?uuid=acc-2024-001&from=2024-01-01&to=2024-12-31\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-001\",\n  \"from\": \"2024-01-01\",\n  \"to\": \"2024-12-31\",\n  \"utilization\": 0.82,\n  \"start_time\": \"2025-07-10T16:00:15.012Z\",\n  \"end_time\": \"2025-07-10T16:00:15.061Z\",\n  \"execution_time\": 0.049\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nUUID is missing or invalid\n\n\n403\nUnauthorized access\n\n\n404\nAccount or tree not found\n\n\n500\nInternal server error or date parsing\n\n\n\n\n\n\n\nInternally uses account$income_utilization(date_range).\nUtilization = spending / income, typically between 0 and 1.\nReturns 0 if no income is recorded during the range.\nAccepts optional from and to parameters for flexible filtering.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Income Utilization"
    ]
  },
  {
    "objectID": "income_utilization.html#summary",
    "href": "income_utilization.html#summary",
    "title": "📊 GET /income_utilization",
    "section": "",
    "text": "Method: GET\nURL: /income_utilization\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Income Utilization"
    ]
  },
  {
    "objectID": "income_utilization.html#headers",
    "href": "income_utilization.html#headers",
    "title": "📊 GET /income_utilization",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Income Utilization"
    ]
  },
  {
    "objectID": "income_utilization.html#request-parameters",
    "href": "income_utilization.html#request-parameters",
    "title": "📊 GET /income_utilization",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account\n\n\nfrom\nstring\n❌\nStart date (YYYY-MM-DD). Defaults to earliest date\n\n\nto\nstring\n❌\nEnd date (YYYY-MM-DD). Defaults to today",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Income Utilization"
    ]
  },
  {
    "objectID": "income_utilization.html#example-request",
    "href": "income_utilization.html#example-request",
    "title": "📊 GET /income_utilization",
    "section": "",
    "text": "GET /income_utilization?uuid=acc-2024-001&from=2024-01-01&to=2024-12-31",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Income Utilization"
    ]
  },
  {
    "objectID": "income_utilization.html#success-response",
    "href": "income_utilization.html#success-response",
    "title": "📊 GET /income_utilization",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-001\",\n  \"from\": \"2024-01-01\",\n  \"to\": \"2024-12-31\",\n  \"utilization\": 0.82,\n  \"start_time\": \"2025-07-10T16:00:15.012Z\",\n  \"end_time\": \"2025-07-10T16:00:15.061Z\",\n  \"execution_time\": 0.049\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Income Utilization"
    ]
  },
  {
    "objectID": "income_utilization.html#failure-response-examples",
    "href": "income_utilization.html#failure-response-examples",
    "title": "📊 GET /income_utilization",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nUUID is missing or invalid\n\n\n403\nUnauthorized access\n\n\n404\nAccount or tree not found\n\n\n500\nInternal server error or date parsing",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Income Utilization"
    ]
  },
  {
    "objectID": "income_utilization.html#notes",
    "href": "income_utilization.html#notes",
    "title": "📊 GET /income_utilization",
    "section": "",
    "text": "Internally uses account$income_utilization(date_range).\nUtilization = spending / income, typically between 0 and 1.\nReturns 0 if no income is recorded during the range.\nAccepts optional from and to parameters for flexible filtering.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Income Utilization"
    ]
  },
  {
    "objectID": "income_utilization.html#sponsors",
    "href": "income_utilization.html#sponsors",
    "title": "📊 GET /income_utilization",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Income Utilization"
    ]
  },
  {
    "objectID": "deposit.html",
    "href": "deposit.html",
    "title": "💰 POST /deposit",
    "section": "",
    "text": "Deposits funds into a user’s account. Requires a valid JWT token and a UUID identifying the account. Updates balances and persists changes securely.\n\n\n\n\nMethod: POST\nURL: /deposit\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to deposit into\n\n\namount\nfloat\n✅\nAmount to deposit\n\n\nchannel\nstring\n✅\nDeposit channel (e.g., M-Pesa, Bank)\n\n\ntransaction_number\nstring\n❌\nOptional reference number\n\n\ninitiated_by\nstring\n❌\nWho performed the deposit (default = User)\n\n\ntransaction_date\nstring\n❌\nDeposit timestamp (default = now)\n\n\n\n\n\n\n\n{\n  \"uuid\": \"acc-2023-savings-abc123\",\n  \"amount\": 1500,\n  \"channel\": \"mpesa\",\n  \"transaction_number\": \"MPESA123456\",\n  \"initiated_by\": \"User\"\n}\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"account_uuid\": \"acc-2023-savings-abc123\",\n  \"amount\": 1500,\n  \"balance\": 3300,\n  \"start_time\": \"2025-07-10T08:50:15.123Z\",\n  \"end_time\": \"2025-07-10T08:50:15.200Z\",\n  \"execution_time\": 0.077\n}\n\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n403\nUnauthorized for this account\n\n\n404\nAccount not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\n\nUses a lock mechanism to ensure safe concurrent writes.\nReturns structured timing for performance tracking.\nMust be called after auth (JWT must be valid).\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Deposit"
    ]
  },
  {
    "objectID": "deposit.html#summary",
    "href": "deposit.html#summary",
    "title": "💰 POST /deposit",
    "section": "",
    "text": "Method: POST\nURL: /deposit\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Deposit"
    ]
  },
  {
    "objectID": "deposit.html#headers",
    "href": "deposit.html#headers",
    "title": "💰 POST /deposit",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Deposit"
    ]
  },
  {
    "objectID": "deposit.html#request-parameters",
    "href": "deposit.html#request-parameters",
    "title": "💰 POST /deposit",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to deposit into\n\n\namount\nfloat\n✅\nAmount to deposit\n\n\nchannel\nstring\n✅\nDeposit channel (e.g., M-Pesa, Bank)\n\n\ntransaction_number\nstring\n❌\nOptional reference number\n\n\ninitiated_by\nstring\n❌\nWho performed the deposit (default = User)\n\n\ntransaction_date\nstring\n❌\nDeposit timestamp (default = now)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Deposit"
    ]
  },
  {
    "objectID": "deposit.html#example-request-body-json",
    "href": "deposit.html#example-request-body-json",
    "title": "💰 POST /deposit",
    "section": "",
    "text": "{\n  \"uuid\": \"acc-2023-savings-abc123\",\n  \"amount\": 1500,\n  \"channel\": \"mpesa\",\n  \"transaction_number\": \"MPESA123456\",\n  \"initiated_by\": \"User\"\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Deposit"
    ]
  },
  {
    "objectID": "deposit.html#success-response",
    "href": "deposit.html#success-response",
    "title": "💰 POST /deposit",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"account_uuid\": \"acc-2023-savings-abc123\",\n  \"amount\": 1500,\n  \"balance\": 3300,\n  \"start_time\": \"2025-07-10T08:50:15.123Z\",\n  \"end_time\": \"2025-07-10T08:50:15.200Z\",\n  \"execution_time\": 0.077\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Deposit"
    ]
  },
  {
    "objectID": "deposit.html#failure-response-examples",
    "href": "deposit.html#failure-response-examples",
    "title": "💰 POST /deposit",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n403\nUnauthorized for this account\n\n\n404\nAccount not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Deposit"
    ]
  },
  {
    "objectID": "deposit.html#notes",
    "href": "deposit.html#notes",
    "title": "💰 POST /deposit",
    "section": "",
    "text": "Uses a lock mechanism to ensure safe concurrent writes.\nReturns structured timing for performance tracking.\nMust be called after auth (JWT must be valid).",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Deposit"
    ]
  },
  {
    "objectID": "deposit.html#sponsors",
    "href": "deposit.html#sponsors",
    "title": "💰 POST /deposit",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Deposit"
    ]
  },
  {
    "objectID": "set_account_periods.html",
    "href": "set_account_periods.html",
    "title": "📅 POST /set_account_periods",
    "section": "",
    "text": "Sets the number of periods for a grandchild account. Useful for budgeting logic that depends on period breakdown (e.g., 12 months, 4 quarters).\n\n\n\n\nMethod: POST\n\nURL: /set_account_periods\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\nperiods\ninteger\n✅\nNumber of periods (must be a positive integer)\n\n\n\n\n\n\n\n{\n  \"uuid\": \"acc-3487\",\n  \"periods\": 12\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-3487\",\n  \"periods\": 12,\n  \"message\": \"Number of periods set to 12\",\n  \"start_time\": \"2025-07-10T16:03:01.120Z\",\n  \"end_time\": \"2025-07-10T16:03:01.136Z\",\n  \"execution_time\": 0.016\n}\n\n\n\n\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing or invalid parameters (e.g., uuid, periods)\n\n\n403\nAccount not found or not a grandchild account\n\n\n404\nUser not found or unauthorized access\n\n\n500\nInternal server error\n\n\n\n\n\n\n\n\nThis endpoint only works for accounts that inherit from GrandchildAccount.\nThe periods value should be a positive whole number.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Periods"
    ]
  },
  {
    "objectID": "set_account_periods.html#summary",
    "href": "set_account_periods.html#summary",
    "title": "📅 POST /set_account_periods",
    "section": "",
    "text": "Method: POST\n\nURL: /set_account_periods\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Periods"
    ]
  },
  {
    "objectID": "set_account_periods.html#headers",
    "href": "set_account_periods.html#headers",
    "title": "📅 POST /set_account_periods",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Periods"
    ]
  },
  {
    "objectID": "set_account_periods.html#json-body-parameters",
    "href": "set_account_periods.html#json-body-parameters",
    "title": "📅 POST /set_account_periods",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\nperiods\ninteger\n✅\nNumber of periods (must be a positive integer)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Periods"
    ]
  },
  {
    "objectID": "set_account_periods.html#example-request",
    "href": "set_account_periods.html#example-request",
    "title": "📅 POST /set_account_periods",
    "section": "",
    "text": "{\n  \"uuid\": \"acc-3487\",\n  \"periods\": 12\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-3487\",\n  \"periods\": 12,\n  \"message\": \"Number of periods set to 12\",\n  \"start_time\": \"2025-07-10T16:03:01.120Z\",\n  \"end_time\": \"2025-07-10T16:03:01.136Z\",\n  \"execution_time\": 0.016\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Periods"
    ]
  },
  {
    "objectID": "set_account_periods.html#error-responses",
    "href": "set_account_periods.html#error-responses",
    "title": "📅 POST /set_account_periods",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing or invalid parameters (e.g., uuid, periods)\n\n\n403\nAccount not found or not a grandchild account\n\n\n404\nUser not found or unauthorized access\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Periods"
    ]
  },
  {
    "objectID": "set_account_periods.html#notes",
    "href": "set_account_periods.html#notes",
    "title": "📅 POST /set_account_periods",
    "section": "",
    "text": "This endpoint only works for accounts that inherit from GrandchildAccount.\nThe periods value should be a positive whole number.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Periods"
    ]
  },
  {
    "objectID": "set_account_periods.html#sponsors",
    "href": "set_account_periods.html#sponsors",
    "title": "📅 POST /set_account_periods",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Periods"
    ]
  },
  {
    "objectID": "set_account_type.html",
    "href": "set_account_type.html",
    "title": "🏷️ POST /set_account_type",
    "section": "",
    "text": "Updates the account type of a grandchild account. Account types can represent categories such as “utility”, “subscription”, “loan”, etc.\n\n\n\n\nMethod: POST\n\nURL: /set_account_type\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/x-www-form-urlencoded\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\naccount_type\nstring\n✅\nNew account type label or identifier (e.g. “rent”)\n\n\n\n\n\n\n\n{\n  \"uuid\": \"acc-3245\",\n  \"account_type\": \"loan\"\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Account type updated to loan\",\n  \"uuid\": \"acc-3245\",\n  \"account_type\": \"loan\",\n  \"start_time\": \"2025-07-10T12:44:22.300Z\",\n  \"end_time\": \"2025-07-10T12:44:22.314Z\",\n  \"execution_time\": 0.014\n}\n\n\n\n\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing parameters or invalid format\n\n\n403\nNot a grandchild account or unauthorized access\n\n\n404\nAccount tree or account not found\n\n\n500\nInternal server error during update\n\n\n\n\n\n\n\n\nOnly valid for accounts that inherit from GrandchildAccount.\nYou can use account_type for filtering, reporting, or logic grouping.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Account Type"
    ]
  },
  {
    "objectID": "set_account_type.html#summary",
    "href": "set_account_type.html#summary",
    "title": "🏷️ POST /set_account_type",
    "section": "",
    "text": "Method: POST\n\nURL: /set_account_type\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Account Type"
    ]
  },
  {
    "objectID": "set_account_type.html#headers",
    "href": "set_account_type.html#headers",
    "title": "🏷️ POST /set_account_type",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/x-www-form-urlencoded",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Account Type"
    ]
  },
  {
    "objectID": "set_account_type.html#form-parameters",
    "href": "set_account_type.html#form-parameters",
    "title": "🏷️ POST /set_account_type",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\naccount_type\nstring\n✅\nNew account type label or identifier (e.g. “rent”)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Account Type"
    ]
  },
  {
    "objectID": "set_account_type.html#example-request",
    "href": "set_account_type.html#example-request",
    "title": "🏷️ POST /set_account_type",
    "section": "",
    "text": "{\n  \"uuid\": \"acc-3245\",\n  \"account_type\": \"loan\"\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Account type updated to loan\",\n  \"uuid\": \"acc-3245\",\n  \"account_type\": \"loan\",\n  \"start_time\": \"2025-07-10T12:44:22.300Z\",\n  \"end_time\": \"2025-07-10T12:44:22.314Z\",\n  \"execution_time\": 0.014\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Account Type"
    ]
  },
  {
    "objectID": "set_account_type.html#error-responses",
    "href": "set_account_type.html#error-responses",
    "title": "🏷️ POST /set_account_type",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing parameters or invalid format\n\n\n403\nNot a grandchild account or unauthorized access\n\n\n404\nAccount tree or account not found\n\n\n500\nInternal server error during update",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Account Type"
    ]
  },
  {
    "objectID": "set_account_type.html#notes",
    "href": "set_account_type.html#notes",
    "title": "🏷️ POST /set_account_type",
    "section": "",
    "text": "Only valid for accounts that inherit from GrandchildAccount.\nYou can use account_type for filtering, reporting, or logic grouping.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Account Type"
    ]
  },
  {
    "objectID": "set_account_type.html#sponsors",
    "href": "set_account_type.html#sponsors",
    "title": "🏷️ POST /set_account_type",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Account Type"
    ]
  },
  {
    "objectID": "get_priority.html",
    "href": "get_priority.html",
    "title": "🔍 GET /get_priority",
    "section": "",
    "text": "Returns the priority value of a child or grandchild account.\n\n\n\nMethod: GET\nURL: /get_priority\nAuth: Required\nTag: accounts\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the child or grandchild account\n\n\n\n\n\n\nGET /get_priority?uuid=acc-12345\nAuthorization: Bearer &lt;your-token&gt;\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nUUID not provided\n\n\n403\nAccount not found or not a child/grandchild account\n\n\n404\nAccount tree not found for the user\n\n\n500\nInternal server error\n\n\n\n\n\n\n\nThis endpoint is valid only for accounts that inherit from ChildAccount.\nThe returned priority can be numeric or a string (e.g., “high”, “low”), depending on your implementation.\nTo set or change a priority, use the POST /set_priority endpoint.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Priority"
    ]
  },
  {
    "objectID": "get_priority.html#summary",
    "href": "get_priority.html#summary",
    "title": "🔍 GET /get_priority",
    "section": "",
    "text": "Method: GET\nURL: /get_priority\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Priority"
    ]
  },
  {
    "objectID": "get_priority.html#headers",
    "href": "get_priority.html#headers",
    "title": "🔍 GET /get_priority",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the child or grandchild account",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Priority"
    ]
  },
  {
    "objectID": "get_priority.html#example-request",
    "href": "get_priority.html#example-request",
    "title": "🔍 GET /get_priority",
    "section": "",
    "text": "GET /get_priority?uuid=acc-12345\nAuthorization: Bearer &lt;your-token&gt;",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Priority"
    ]
  },
  {
    "objectID": "get_priority.html#error-responses",
    "href": "get_priority.html#error-responses",
    "title": "🔍 GET /get_priority",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nUUID not provided\n\n\n403\nAccount not found or not a child/grandchild account\n\n\n404\nAccount tree not found for the user\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Priority"
    ]
  },
  {
    "objectID": "get_priority.html#notes",
    "href": "get_priority.html#notes",
    "title": "🔍 GET /get_priority",
    "section": "",
    "text": "This endpoint is valid only for accounts that inherit from ChildAccount.\nThe returned priority can be numeric or a string (e.g., “high”, “low”), depending on your implementation.\nTo set or change a priority, use the POST /set_priority endpoint.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Priority"
    ]
  },
  {
    "objectID": "get_priority.html#sponsors",
    "href": "get_priority.html#sponsors",
    "title": "🔍 GET /get_priority",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Priority"
    ]
  },
  {
    "objectID": "total_income.html",
    "href": "total_income.html",
    "title": "💰 GET /total_income",
    "section": "",
    "text": "Returns the total income (deposits/credits) received by an account and its sub-accounts over a specified date range.\n\n\n\n\nMethod: GET\nURL: /total_income\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to compute income for\n\n\nfrom\nstring\n❌\nStart date (YYYY-MM-DD). Defaults to earliest\n\n\nto\nstring\n❌\nEnd date (YYYY-MM-DD). Defaults to today\n\n\n\n\n\n\n\nGET /total_income?uuid=acc-2024-001&from=2025-01-01&to=2025-07-01\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-001\",\n  \"from\": \"2025-01-01\",\n  \"to\": \"2025-07-01\",\n  \"total_income\": 37500,\n  \"start_time\": \"2025-07-10T14:17:11.125Z\",\n  \"end_time\": \"2025-07-10T14:17:11.174Z\",\n  \"execution_time\": 0.049\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nUUID not provided or invalid date\n\n\n403\nUnauthorized access\n\n\n404\nAccount not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\nInternally uses account$total_income(date_range) method.\nIf from or to are not provided, defaults to entire history.\nIncome includes deposit-type transactions across the entire subtree.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Total Income"
    ]
  },
  {
    "objectID": "total_income.html#summary",
    "href": "total_income.html#summary",
    "title": "💰 GET /total_income",
    "section": "",
    "text": "Method: GET\nURL: /total_income\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Total Income"
    ]
  },
  {
    "objectID": "total_income.html#headers",
    "href": "total_income.html#headers",
    "title": "💰 GET /total_income",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Total Income"
    ]
  },
  {
    "objectID": "total_income.html#request-parameters",
    "href": "total_income.html#request-parameters",
    "title": "💰 GET /total_income",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to compute income for\n\n\nfrom\nstring\n❌\nStart date (YYYY-MM-DD). Defaults to earliest\n\n\nto\nstring\n❌\nEnd date (YYYY-MM-DD). Defaults to today",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Total Income"
    ]
  },
  {
    "objectID": "total_income.html#example-request",
    "href": "total_income.html#example-request",
    "title": "💰 GET /total_income",
    "section": "",
    "text": "GET /total_income?uuid=acc-2024-001&from=2025-01-01&to=2025-07-01",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Total Income"
    ]
  },
  {
    "objectID": "total_income.html#success-response",
    "href": "total_income.html#success-response",
    "title": "💰 GET /total_income",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-001\",\n  \"from\": \"2025-01-01\",\n  \"to\": \"2025-07-01\",\n  \"total_income\": 37500,\n  \"start_time\": \"2025-07-10T14:17:11.125Z\",\n  \"end_time\": \"2025-07-10T14:17:11.174Z\",\n  \"execution_time\": 0.049\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Total Income"
    ]
  },
  {
    "objectID": "total_income.html#failure-response-examples",
    "href": "total_income.html#failure-response-examples",
    "title": "💰 GET /total_income",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nUUID not provided or invalid date\n\n\n403\nUnauthorized access\n\n\n404\nAccount not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Total Income"
    ]
  },
  {
    "objectID": "total_income.html#notes",
    "href": "total_income.html#notes",
    "title": "💰 GET /total_income",
    "section": "",
    "text": "Internally uses account$total_income(date_range) method.\nIf from or to are not provided, defaults to entire history.\nIncome includes deposit-type transactions across the entire subtree.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Total Income"
    ]
  },
  {
    "objectID": "total_income.html#sponsors",
    "href": "total_income.html#sponsors",
    "title": "💰 GET /total_income",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Total Income"
    ]
  },
  {
    "objectID": "get_account_periods.html",
    "href": "get_account_periods.html",
    "title": "📅 GET /get_account_periods",
    "section": "",
    "text": "Fetches the configured number of periods for a grandchild account. This is useful for understanding budgeting cycles such as monthly, quarterly, or custom-defined durations.\n\n\n\n\nMethod: GET\n\nURL: /get_account_periods\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\n\n\n\n\n\nGET /get_account_periods?uuid=acc-12345\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-12345\",\n  \"periods\": 12,\n  \"start_time\": \"2025-07-10T17:10:15.422Z\",\n  \"end_time\": \"2025-07-10T17:10:15.438Z\",\n  \"execution_time\": 0.016\n}\n\n\n\n\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing or invalid uuid parameter\n\n\n403\nAccount not found or not a GrandchildAccount\n\n\n404\nUser not found or unauthorized access\n\n\n500\nInternal server error\n\n\n\n\n\n\n\n\nThis endpoint is strictly applicable to grandchild accounts.\nPeriods may correspond to budgeting periods or billing cycles, depending on your app logic.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Periods"
    ]
  },
  {
    "objectID": "get_account_periods.html#summary",
    "href": "get_account_periods.html#summary",
    "title": "📅 GET /get_account_periods",
    "section": "",
    "text": "Method: GET\n\nURL: /get_account_periods\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Periods"
    ]
  },
  {
    "objectID": "get_account_periods.html#headers",
    "href": "get_account_periods.html#headers",
    "title": "📅 GET /get_account_periods",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Periods"
    ]
  },
  {
    "objectID": "get_account_periods.html#query-parameters",
    "href": "get_account_periods.html#query-parameters",
    "title": "📅 GET /get_account_periods",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Periods"
    ]
  },
  {
    "objectID": "get_account_periods.html#example-request",
    "href": "get_account_periods.html#example-request",
    "title": "📅 GET /get_account_periods",
    "section": "",
    "text": "GET /get_account_periods?uuid=acc-12345\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-12345\",\n  \"periods\": 12,\n  \"start_time\": \"2025-07-10T17:10:15.422Z\",\n  \"end_time\": \"2025-07-10T17:10:15.438Z\",\n  \"execution_time\": 0.016\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Periods"
    ]
  },
  {
    "objectID": "get_account_periods.html#error-responses",
    "href": "get_account_periods.html#error-responses",
    "title": "📅 GET /get_account_periods",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing or invalid uuid parameter\n\n\n403\nAccount not found or not a GrandchildAccount\n\n\n404\nUser not found or unauthorized access\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Periods"
    ]
  },
  {
    "objectID": "get_account_periods.html#notes",
    "href": "get_account_periods.html#notes",
    "title": "📅 GET /get_account_periods",
    "section": "",
    "text": "This endpoint is strictly applicable to grandchild accounts.\nPeriods may correspond to budgeting periods or billing cycles, depending on your app logic.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Periods"
    ]
  },
  {
    "objectID": "get_account_periods.html#sponsors",
    "href": "get_account_periods.html#sponsors",
    "title": "📅 GET /get_account_periods",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Periods"
    ]
  },
  {
    "objectID": "auth-filter.html",
    "href": "auth-filter.html",
    "title": "🔐 Auth Filter",
    "section": "",
    "text": "Scope: All protected endpoints\nRoute Type: Global filter (@filter auth)\nTag: auth\n\n\n\nThe auth filter is applied to all incoming requests While /login and /__ping__, are exempt from JWT authentication, they are still subject to rate limiting and exponential backoff to prevent brute-force attacks.\nIt performs these responsibilities:\n\n🔑 Verifies Bearer token from the Authorization header\n🧾 Decodes token and attaches user_id and role to the request\n📊 Enforces rate limiting using MAX_REQUESTS per WINDOW_SIZE\n⏳ Applies exponential backoff for repeated failed logins\n\n\n\n\n\nAuthorization: Bearer eyJhbGciOiJIUzI1...\n\n\n\n\n\n\n\n\n\n\n\n\nCondition\nStatus\nExample Error\n\n\n\n\nMissing or malformed token\n401\n{ \"error\": \"Missing or invalid token\" }\n\n\nInvalid or expired token\n401\n{ \"error\": \"Invalid or expired token\" }\n\n\nToo many failed attempts\n429\n{ \"error\": \"Too many failed attempts. Wait 8s.\" }\n\n\nRate limit exceeded\n429\n{ \"error\": \"Rate limit exceeded. Try later.\" }\n\n\nMisconfigured secret\n500\n{ \"error\": \"Server misconfigured (missing JWT_SECRET)\" }\n\n\n\n\n\n\n\nIf the token is valid, your endpoint functions will have:\nreq$user_id  # Unique user ID\nreq$role     # Role, e.g., \"user\", \"admin\"\nThe filter logic is defined in plumber.R using @filter auth.\n\n\n\n\n\n\n\n\n\n\n\n\nEnv Variable\nPurpose\nDefault\n\n\n\n\nJWT_SECRET\nSecret key for decoding JWT\n(required)\n\n\nMAX_REQUESTS\nMax allowed requests in the window\n1000\n\n\nWINDOW_SIZE\nRate limit window duration in seconds\n3600\n\n\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Auth filter"
    ]
  },
  {
    "objectID": "auth-filter.html#description",
    "href": "auth-filter.html#description",
    "title": "🔐 Auth Filter",
    "section": "",
    "text": "The auth filter is applied to all incoming requests While /login and /__ping__, are exempt from JWT authentication, they are still subject to rate limiting and exponential backoff to prevent brute-force attacks.\nIt performs these responsibilities:\n\n🔑 Verifies Bearer token from the Authorization header\n🧾 Decodes token and attaches user_id and role to the request\n📊 Enforces rate limiting using MAX_REQUESTS per WINDOW_SIZE\n⏳ Applies exponential backoff for repeated failed logins",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Auth filter"
    ]
  },
  {
    "objectID": "auth-filter.html#header-example",
    "href": "auth-filter.html#header-example",
    "title": "🔐 Auth Filter",
    "section": "",
    "text": "Authorization: Bearer eyJhbGciOiJIUzI1...",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Auth filter"
    ]
  },
  {
    "objectID": "auth-filter.html#response-summary",
    "href": "auth-filter.html#response-summary",
    "title": "🔐 Auth Filter",
    "section": "",
    "text": "Condition\nStatus\nExample Error\n\n\n\n\nMissing or malformed token\n401\n{ \"error\": \"Missing or invalid token\" }\n\n\nInvalid or expired token\n401\n{ \"error\": \"Invalid or expired token\" }\n\n\nToo many failed attempts\n429\n{ \"error\": \"Too many failed attempts. Wait 8s.\" }\n\n\nRate limit exceeded\n429\n{ \"error\": \"Rate limit exceeded. Try later.\" }\n\n\nMisconfigured secret\n500\n{ \"error\": \"Server misconfigured (missing JWT_SECRET)\" }",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Auth filter"
    ]
  },
  {
    "objectID": "auth-filter.html#internal-notes",
    "href": "auth-filter.html#internal-notes",
    "title": "🔐 Auth Filter",
    "section": "",
    "text": "If the token is valid, your endpoint functions will have:\nreq$user_id  # Unique user ID\nreq$role     # Role, e.g., \"user\", \"admin\"\nThe filter logic is defined in plumber.R using @filter auth.",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Auth filter"
    ]
  },
  {
    "objectID": "auth-filter.html#environment-configuration",
    "href": "auth-filter.html#environment-configuration",
    "title": "🔐 Auth Filter",
    "section": "",
    "text": "Env Variable\nPurpose\nDefault\n\n\n\n\nJWT_SECRET\nSecret key for decoding JWT\n(required)\n\n\nMAX_REQUESTS\nMax allowed requests in the window\n1000\n\n\nWINDOW_SIZE\nRate limit window duration in seconds\n3600",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Auth filter"
    ]
  },
  {
    "objectID": "auth-filter.html#sponsors",
    "href": "auth-filter.html#sponsors",
    "title": "🔐 Auth Filter",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Auth filter"
    ]
  },
  {
    "objectID": "find_account_by_uuid.html",
    "href": "find_account_by_uuid.html",
    "title": "🆔 GET /find_account_by_uuid",
    "section": "",
    "text": "Returns detailed information about a specific account using its UUID.\n\n\n\n\nMethod: GET\nURL: /find_account_by_uuid\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to lookup\n\n\n\n\n\n\n\nGET /find_account_by_uuid?uuid=acc-2024-001\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-001\",\n  \"name\": \"Internet\",\n  \"path\": \"Main &gt; Needs &gt; Internet\",\n  \"type\": \"GrandchildAccount\",\n  \"balance\": 4200,\n  \"total_balance\": 4200,\n  \"amount_due\": 0,\n  \"total_amount_due\": 0,\n  \"allocation\": 0.15,\n  \"parent_uuid\": \"acc-2024-000\",\n  \"start_time\": \"2025-07-10T11:55:10.215Z\",\n  \"end_time\": \"2025-07-10T11:55:10.228Z\",\n  \"execution_time\": 0.013\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nUUID is missing in the request\n\n\n403\nUnauthorized access to the account\n\n\n404\nAccount not found\n\n\n500\nAccount tree file not available or error\n\n\n\n\n\n\n\nThe endpoint retrieves all core metadata for an account.\nIf the account has no parent, parent_uuid will be null.\nThis endpoint can help render full account detail views or support downstream actions.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by UUID"
    ]
  },
  {
    "objectID": "find_account_by_uuid.html#summary",
    "href": "find_account_by_uuid.html#summary",
    "title": "🆔 GET /find_account_by_uuid",
    "section": "",
    "text": "Method: GET\nURL: /find_account_by_uuid\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by UUID"
    ]
  },
  {
    "objectID": "find_account_by_uuid.html#headers",
    "href": "find_account_by_uuid.html#headers",
    "title": "🆔 GET /find_account_by_uuid",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by UUID"
    ]
  },
  {
    "objectID": "find_account_by_uuid.html#request-parameters",
    "href": "find_account_by_uuid.html#request-parameters",
    "title": "🆔 GET /find_account_by_uuid",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to lookup",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by UUID"
    ]
  },
  {
    "objectID": "find_account_by_uuid.html#example-request",
    "href": "find_account_by_uuid.html#example-request",
    "title": "🆔 GET /find_account_by_uuid",
    "section": "",
    "text": "GET /find_account_by_uuid?uuid=acc-2024-001",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by UUID"
    ]
  },
  {
    "objectID": "find_account_by_uuid.html#success-response",
    "href": "find_account_by_uuid.html#success-response",
    "title": "🆔 GET /find_account_by_uuid",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-001\",\n  \"name\": \"Internet\",\n  \"path\": \"Main &gt; Needs &gt; Internet\",\n  \"type\": \"GrandchildAccount\",\n  \"balance\": 4200,\n  \"total_balance\": 4200,\n  \"amount_due\": 0,\n  \"total_amount_due\": 0,\n  \"allocation\": 0.15,\n  \"parent_uuid\": \"acc-2024-000\",\n  \"start_time\": \"2025-07-10T11:55:10.215Z\",\n  \"end_time\": \"2025-07-10T11:55:10.228Z\",\n  \"execution_time\": 0.013\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by UUID"
    ]
  },
  {
    "objectID": "find_account_by_uuid.html#failure-response-examples",
    "href": "find_account_by_uuid.html#failure-response-examples",
    "title": "🆔 GET /find_account_by_uuid",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nUUID is missing in the request\n\n\n403\nUnauthorized access to the account\n\n\n404\nAccount not found\n\n\n500\nAccount tree file not available or error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by UUID"
    ]
  },
  {
    "objectID": "find_account_by_uuid.html#notes",
    "href": "find_account_by_uuid.html#notes",
    "title": "🆔 GET /find_account_by_uuid",
    "section": "",
    "text": "The endpoint retrieves all core metadata for an account.\nIf the account has no parent, parent_uuid will be null.\nThis endpoint can help render full account detail views or support downstream actions.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by UUID"
    ]
  },
  {
    "objectID": "find_account_by_uuid.html#sponsors",
    "href": "find_account_by_uuid.html#sponsors",
    "title": "🆔 GET /find_account_by_uuid",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by UUID"
    ]
  },
  {
    "objectID": "add_sub_account.html",
    "href": "add_sub_account.html",
    "title": "🧩 POST /add_sub_account",
    "section": "",
    "text": "Creates a new child or grandchild account under a specified parent account.\n\n\n\n\nMethod: POST\nURL: /add_sub_account\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nparent_uuid\nstring\n✅\nUUID of the parent account\n\n\nname\nstring\n✅\nName of the new account (must be unique under this parent)\n\n\nallocation\nfloat\n✅\nAllocation percentage (between 0 and 1)\n\n\npriority\nint\n❌\nPriority weight for ordering (default: 0)\n\n\nfixed_amount\nfloat\n❌\nFixed allocation amount (only used for grandchild accounts)\n\n\ndue_date\nstring\n❌\nOptional due date (ISO-8601 format)\n\n\naccount_type\nstring\n❌\nType of grandchild account (e.g., “loan”, “expense”)\n\n\nfreq\nint\n❌\nFrequency of recurring charges (used only for grandchild accounts)\n\n\n\n\n\n\n\n{\n  \"parent_uuid\": \"acc-main-2023-001\",\n  \"name\": \"Rent\",\n  \"allocation\": 0.3,\n  \"priority\": 1,\n  \"fixed_amount\": 2000,\n  \"due_date\": \"2025-08-01T00:00:00Z\",\n  \"account_type\": \"fixed\",\n  \"freq\": 30\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Rent added under Needs\",\n  \"child_type\": \"GrandchildAccount\",\n  \"allocation\": 0.3,\n  \"start_time\": \"2025-07-10T10:01:35.120Z\",\n  \"end_time\": \"2025-07-10T10:01:35.210Z\",\n  \"execution_time\": 0.09\n}\n\n\n\n\n\n\nStatus\nError Reason\n\n\n\n\n404\nParent account not found\n\n\n400\nInvalid allocation or name already exists\n\n\n500\nUnexpected system or conversion errors\n\n\n\n\n\n\n\nDetermines account type by checking the class of the parent account.\nLocks the user’s account tree during modification.\nAll accounts are persisted to account_tree.Rds.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors"
  },
  {
    "objectID": "add_sub_account.html#summary",
    "href": "add_sub_account.html#summary",
    "title": "🧩 POST /add_sub_account",
    "section": "",
    "text": "Method: POST\nURL: /add_sub_account\nAuth: Required\nTag: accounts"
  },
  {
    "objectID": "add_sub_account.html#headers",
    "href": "add_sub_account.html#headers",
    "title": "🧩 POST /add_sub_account",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json"
  },
  {
    "objectID": "add_sub_account.html#request-parameters",
    "href": "add_sub_account.html#request-parameters",
    "title": "🧩 POST /add_sub_account",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nparent_uuid\nstring\n✅\nUUID of the parent account\n\n\nname\nstring\n✅\nName of the new account (must be unique under this parent)\n\n\nallocation\nfloat\n✅\nAllocation percentage (between 0 and 1)\n\n\npriority\nint\n❌\nPriority weight for ordering (default: 0)\n\n\nfixed_amount\nfloat\n❌\nFixed allocation amount (only used for grandchild accounts)\n\n\ndue_date\nstring\n❌\nOptional due date (ISO-8601 format)\n\n\naccount_type\nstring\n❌\nType of grandchild account (e.g., “loan”, “expense”)\n\n\nfreq\nint\n❌\nFrequency of recurring charges (used only for grandchild accounts)"
  },
  {
    "objectID": "add_sub_account.html#example-request",
    "href": "add_sub_account.html#example-request",
    "title": "🧩 POST /add_sub_account",
    "section": "",
    "text": "{\n  \"parent_uuid\": \"acc-main-2023-001\",\n  \"name\": \"Rent\",\n  \"allocation\": 0.3,\n  \"priority\": 1,\n  \"fixed_amount\": 2000,\n  \"due_date\": \"2025-08-01T00:00:00Z\",\n  \"account_type\": \"fixed\",\n  \"freq\": 30\n}"
  },
  {
    "objectID": "add_sub_account.html#success-response",
    "href": "add_sub_account.html#success-response",
    "title": "🧩 POST /add_sub_account",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Rent added under Needs\",\n  \"child_type\": \"GrandchildAccount\",\n  \"allocation\": 0.3,\n  \"start_time\": \"2025-07-10T10:01:35.120Z\",\n  \"end_time\": \"2025-07-10T10:01:35.210Z\",\n  \"execution_time\": 0.09\n}"
  },
  {
    "objectID": "add_sub_account.html#failure-responses",
    "href": "add_sub_account.html#failure-responses",
    "title": "🧩 POST /add_sub_account",
    "section": "",
    "text": "Status\nError Reason\n\n\n\n\n404\nParent account not found\n\n\n400\nInvalid allocation or name already exists\n\n\n500\nUnexpected system or conversion errors"
  },
  {
    "objectID": "add_sub_account.html#notes",
    "href": "add_sub_account.html#notes",
    "title": "🧩 POST /add_sub_account",
    "section": "",
    "text": "Determines account type by checking the class of the parent account.\nLocks the user’s account tree during modification.\nAll accounts are persisted to account_tree.Rds."
  },
  {
    "objectID": "add_sub_account.html#sponsors",
    "href": "add_sub_account.html#sponsors",
    "title": "🧩 POST /add_sub_account",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors"
  },
  {
    "objectID": "get_balance.html",
    "href": "get_balance.html",
    "title": "💰 GET /get_balance",
    "section": "",
    "text": "Retrieve the current balance of a specified account by UUID.\n\n\n\n\nMethod: GET\nURL: /get_balance\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to check\n\n\n\n\n\n\n\nGET /get_balance?uuid=main-2023-001\nAuthorization: Bearer eyJhbGciOiJIUzI1...\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"main-2023-001\",\n  \"balance\": 5120,\n  \"start_time\": \"2025-07-10T11:25:14.110Z\",\n  \"end_time\": \"2025-07-10T11:25:14.118Z\",\n  \"execution_time\": 0.008\n}\n\n\n\n\n\n\nStatus\nError Message\n\n\n\n\n403\nAccount not found or unauthorized\n\n\n404\nAccount not found (admin access)\n\n\n500\nServer-side error\n\n\n\n\n\n\n\nThis is a read-only operation and doesn’t require account locking.\nIf the account is not found or the user lacks permissions, appropriate error responses are returned.\nInternally uses account$get_balance().\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Balance"
    ]
  },
  {
    "objectID": "get_balance.html#summary",
    "href": "get_balance.html#summary",
    "title": "💰 GET /get_balance",
    "section": "",
    "text": "Method: GET\nURL: /get_balance\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Balance"
    ]
  },
  {
    "objectID": "get_balance.html#headers",
    "href": "get_balance.html#headers",
    "title": "💰 GET /get_balance",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Balance"
    ]
  },
  {
    "objectID": "get_balance.html#query-parameters",
    "href": "get_balance.html#query-parameters",
    "title": "💰 GET /get_balance",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to check",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Balance"
    ]
  },
  {
    "objectID": "get_balance.html#example-request",
    "href": "get_balance.html#example-request",
    "title": "💰 GET /get_balance",
    "section": "",
    "text": "GET /get_balance?uuid=main-2023-001\nAuthorization: Bearer eyJhbGciOiJIUzI1...",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Balance"
    ]
  },
  {
    "objectID": "get_balance.html#success-response",
    "href": "get_balance.html#success-response",
    "title": "💰 GET /get_balance",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"main-2023-001\",\n  \"balance\": 5120,\n  \"start_time\": \"2025-07-10T11:25:14.110Z\",\n  \"end_time\": \"2025-07-10T11:25:14.118Z\",\n  \"execution_time\": 0.008\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Balance"
    ]
  },
  {
    "objectID": "get_balance.html#failure-responses",
    "href": "get_balance.html#failure-responses",
    "title": "💰 GET /get_balance",
    "section": "",
    "text": "Status\nError Message\n\n\n\n\n403\nAccount not found or unauthorized\n\n\n404\nAccount not found (admin access)\n\n\n500\nServer-side error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Balance"
    ]
  },
  {
    "objectID": "get_balance.html#notes",
    "href": "get_balance.html#notes",
    "title": "💰 GET /get_balance",
    "section": "",
    "text": "This is a read-only operation and doesn’t require account locking.\nIf the account is not found or the user lacks permissions, appropriate error responses are returned.\nInternally uses account$get_balance().",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Balance"
    ]
  },
  {
    "objectID": "get_balance.html#sponsors",
    "href": "get_balance.html#sponsors",
    "title": "💰 GET /get_balance",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Balance"
    ]
  },
  {
    "objectID": "set_priority.html",
    "href": "set_priority.html",
    "title": "🔧 POST /set_priority",
    "section": "",
    "text": "Sets or updates the priority of a child or grandchild account. This affects ordering and potentially allocation rules if implemented.\n\n\n\n\nMethod: POST\nURL: /set_priority\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/x-www-form-urlencoded\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the child or grandchild account\n\n\npriority\nstring/number\n✅\nNew priority value (can be numeric or labeled)\n\n\n\n\n\n\n\n\n{\n  \"uuid\": \"abc\",\n  \"priority\": 1\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Priority set to 1\",\n  \"uuid\": \"acc-12345\",\n  \"priority\": \"1\",\n  \"start_time\": \"2025-07-10T08:02:01.473Z\",\n  \"end_time\": \"2025-07-10T08:02:01.490Z\",\n  \"execution_time\": 0.017\n}\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing parameters or invalid priority format\n\n\n403\nAccount is not a child/grandchild or unauthorized access\n\n\n404\nAccount tree or account not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\nThis endpoint will only work for accounts that inherit from ChildAccount.\nPriority can be a number (e.g., 1, 2) or a string (e.g., “high”, “low”), depending on your implementation logic.\nUsed alongside account auto-allocation or sorting behavior.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Priority"
    ]
  },
  {
    "objectID": "set_priority.html#summary",
    "href": "set_priority.html#summary",
    "title": "🔧 POST /set_priority",
    "section": "",
    "text": "Method: POST\nURL: /set_priority\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Priority"
    ]
  },
  {
    "objectID": "set_priority.html#headers",
    "href": "set_priority.html#headers",
    "title": "🔧 POST /set_priority",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/x-www-form-urlencoded",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Priority"
    ]
  },
  {
    "objectID": "set_priority.html#form-parameters",
    "href": "set_priority.html#form-parameters",
    "title": "🔧 POST /set_priority",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the child or grandchild account\n\n\npriority\nstring/number\n✅\nNew priority value (can be numeric or labeled)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Priority"
    ]
  },
  {
    "objectID": "set_priority.html#example-request",
    "href": "set_priority.html#example-request",
    "title": "🔧 POST /set_priority",
    "section": "",
    "text": "{\n  \"uuid\": \"abc\",\n  \"priority\": 1\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Priority set to 1\",\n  \"uuid\": \"acc-12345\",\n  \"priority\": \"1\",\n  \"start_time\": \"2025-07-10T08:02:01.473Z\",\n  \"end_time\": \"2025-07-10T08:02:01.490Z\",\n  \"execution_time\": 0.017\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Priority"
    ]
  },
  {
    "objectID": "set_priority.html#error-responses",
    "href": "set_priority.html#error-responses",
    "title": "🔧 POST /set_priority",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing parameters or invalid priority format\n\n\n403\nAccount is not a child/grandchild or unauthorized access\n\n\n404\nAccount tree or account not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Priority"
    ]
  },
  {
    "objectID": "set_priority.html#notes",
    "href": "set_priority.html#notes",
    "title": "🔧 POST /set_priority",
    "section": "",
    "text": "This endpoint will only work for accounts that inherit from ChildAccount.\nPriority can be a number (e.g., 1, 2) or a string (e.g., “high”, “low”), depending on your implementation logic.\nUsed alongside account auto-allocation or sorting behavior.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Priority"
    ]
  },
  {
    "objectID": "set_priority.html#sponsors",
    "href": "set_priority.html#sponsors",
    "title": "🔧 POST /set_priority",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Priority"
    ]
  },
  {
    "objectID": "find_account_by_name.html",
    "href": "find_account_by_name.html",
    "title": "🔍 GET /find_account_by_name",
    "section": "",
    "text": "Searches for accounts in the user’s account tree that match a given name. Useful for quickly locating accounts without needing their UUID.\n\n\n\n\nMethod: GET\nURL: /find_account_by_name\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nname\nstring\n✅\nName of the account to look up\n\n\n\n\n\n\n\nGET /find_account_by_name?name=Rent\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"search_name\": \"Rent\",\n  \"total_matches\": 2,\n  \"matches\": [\n    {\n      \"uuid\": \"acc-234\",\n      \"name\": \"Rent\",\n      \"path\": \"Main &gt; Needs &gt; Rent\"\n    },\n    {\n      \"uuid\": \"acc-987\",\n      \"name\": \"Rent\",\n      \"path\": \"Main &gt; Rentals &gt; Rent\"\n    }\n  ],\n  \"start_time\": \"2025-07-10T11:20:10.050Z\",\n  \"end_time\": \"2025-07-10T11:20:10.061Z\",\n  \"execution_time\": 0.011\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n403\nUnauthorized or tree not found\n\n\n500\nMissing argument name or server error\n\n\n\n\n\n\n\n\nMatching is case-sensitive unless your backend handles normalization.\nReturns all matches if the name appears more than once.\nUse uuid from results for further operations (e.g., get balance, transactions).\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by Name"
    ]
  },
  {
    "objectID": "find_account_by_name.html#summary",
    "href": "find_account_by_name.html#summary",
    "title": "🔍 GET /find_account_by_name",
    "section": "",
    "text": "Method: GET\nURL: /find_account_by_name\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by Name"
    ]
  },
  {
    "objectID": "find_account_by_name.html#headers",
    "href": "find_account_by_name.html#headers",
    "title": "🔍 GET /find_account_by_name",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by Name"
    ]
  },
  {
    "objectID": "find_account_by_name.html#request-parameters",
    "href": "find_account_by_name.html#request-parameters",
    "title": "🔍 GET /find_account_by_name",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nname\nstring\n✅\nName of the account to look up",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by Name"
    ]
  },
  {
    "objectID": "find_account_by_name.html#example-request",
    "href": "find_account_by_name.html#example-request",
    "title": "🔍 GET /find_account_by_name",
    "section": "",
    "text": "GET /find_account_by_name?name=Rent",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by Name"
    ]
  },
  {
    "objectID": "find_account_by_name.html#success-response",
    "href": "find_account_by_name.html#success-response",
    "title": "🔍 GET /find_account_by_name",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"search_name\": \"Rent\",\n  \"total_matches\": 2,\n  \"matches\": [\n    {\n      \"uuid\": \"acc-234\",\n      \"name\": \"Rent\",\n      \"path\": \"Main &gt; Needs &gt; Rent\"\n    },\n    {\n      \"uuid\": \"acc-987\",\n      \"name\": \"Rent\",\n      \"path\": \"Main &gt; Rentals &gt; Rent\"\n    }\n  ],\n  \"start_time\": \"2025-07-10T11:20:10.050Z\",\n  \"end_time\": \"2025-07-10T11:20:10.061Z\",\n  \"execution_time\": 0.011\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by Name"
    ]
  },
  {
    "objectID": "find_account_by_name.html#failure-response-examples",
    "href": "find_account_by_name.html#failure-response-examples",
    "title": "🔍 GET /find_account_by_name",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n403\nUnauthorized or tree not found\n\n\n500\nMissing argument name or server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by Name"
    ]
  },
  {
    "objectID": "find_account_by_name.html#notes",
    "href": "find_account_by_name.html#notes",
    "title": "🔍 GET /find_account_by_name",
    "section": "",
    "text": "Matching is case-sensitive unless your backend handles normalization.\nReturns all matches if the name appears more than once.\nUse uuid from results for further operations (e.g., get balance, transactions).",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by Name"
    ]
  },
  {
    "objectID": "find_account_by_name.html#sponsors",
    "href": "find_account_by_name.html#sponsors",
    "title": "🔍 GET /find_account_by_name",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Find Account by Name"
    ]
  },
  {
    "objectID": "list_all_accounts.html",
    "href": "list_all_accounts.html",
    "title": "🌲 GET /list_all_accounts",
    "section": "",
    "text": "Lists all accounts in the tree rooted at a specified account, including both children and parents (if implemented to allow upward tracing).\n\n\n\n\nMethod: GET\nURL: /list_all_accounts\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to start traversal from\n\n\n\n\n\n\n\nGET /list_all_accounts?uuid=goals-acc-2023-02\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"goals-acc-2023-02\",\n  \"total_accounts\": 4,\n  \"account_names\": [\n    \"Goals\",\n    \"Farming\",\n    \"Business\",\n    \"Emergency Fund\"\n  ],\n  \"start_time\": \"2025-07-10T10:51:22.015Z\",\n  \"end_time\": \"2025-07-10T10:51:22.030Z\",\n  \"execution_time\": 0.015\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n403\nUnauthorized to access the account\n\n\n404\nAccount not found\n\n\n500\nInternal error\n\n\n\n\n\n\n\nThis is a read-only endpoint.\nInternally calls account$list_all_accounts() which traverses children recursively.\nDoes not include sibling accounts unless connected via hierarchy.\nCan be used for diagnostics, audit, or hierarchical views.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List All Accounts"
    ]
  },
  {
    "objectID": "list_all_accounts.html#summary",
    "href": "list_all_accounts.html#summary",
    "title": "🌲 GET /list_all_accounts",
    "section": "",
    "text": "Method: GET\nURL: /list_all_accounts\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List All Accounts"
    ]
  },
  {
    "objectID": "list_all_accounts.html#headers",
    "href": "list_all_accounts.html#headers",
    "title": "🌲 GET /list_all_accounts",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List All Accounts"
    ]
  },
  {
    "objectID": "list_all_accounts.html#request-parameters",
    "href": "list_all_accounts.html#request-parameters",
    "title": "🌲 GET /list_all_accounts",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to start traversal from",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List All Accounts"
    ]
  },
  {
    "objectID": "list_all_accounts.html#example-request",
    "href": "list_all_accounts.html#example-request",
    "title": "🌲 GET /list_all_accounts",
    "section": "",
    "text": "GET /list_all_accounts?uuid=goals-acc-2023-02",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List All Accounts"
    ]
  },
  {
    "objectID": "list_all_accounts.html#success-response",
    "href": "list_all_accounts.html#success-response",
    "title": "🌲 GET /list_all_accounts",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"goals-acc-2023-02\",\n  \"total_accounts\": 4,\n  \"account_names\": [\n    \"Goals\",\n    \"Farming\",\n    \"Business\",\n    \"Emergency Fund\"\n  ],\n  \"start_time\": \"2025-07-10T10:51:22.015Z\",\n  \"end_time\": \"2025-07-10T10:51:22.030Z\",\n  \"execution_time\": 0.015\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List All Accounts"
    ]
  },
  {
    "objectID": "list_all_accounts.html#failure-response-examples",
    "href": "list_all_accounts.html#failure-response-examples",
    "title": "🌲 GET /list_all_accounts",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n403\nUnauthorized to access the account\n\n\n404\nAccount not found\n\n\n500\nInternal error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List All Accounts"
    ]
  },
  {
    "objectID": "list_all_accounts.html#notes",
    "href": "list_all_accounts.html#notes",
    "title": "🌲 GET /list_all_accounts",
    "section": "",
    "text": "This is a read-only endpoint.\nInternally calls account$list_all_accounts() which traverses children recursively.\nDoes not include sibling accounts unless connected via hierarchy.\nCan be used for diagnostics, audit, or hierarchical views.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List All Accounts"
    ]
  },
  {
    "objectID": "list_all_accounts.html#sponsors",
    "href": "list_all_accounts.html#sponsors",
    "title": "🌲 GET /list_all_accounts",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List All Accounts"
    ]
  },
  {
    "objectID": "compute_total_due_within_days.html",
    "href": "compute_total_due_within_days.html",
    "title": "⏳ GET /compute_total_due_within_days",
    "section": "",
    "text": "Returns the total amount due for a given account (and its children) within the next specified number of days.\n\n\n\n\nMethod: GET\nURL: /compute_total_due_within_days\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to evaluate\n\n\ndays\nnumber\n✅\nNumber of days to look ahead when summing due amounts\n\n\n\n\n\n\n\nGET /compute_total_due_within_days?uuid=acc-2024-456&days=30\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-456\",\n  \"total_due\": 1700.25,\n  \"within_days\": 30,\n  \"start_time\": \"2025-07-10T13:25:14.882Z\",\n  \"end_time\": \"2025-07-10T13:25:14.944Z\",\n  \"execution_time\": 0.06\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nUUID or days parameter missing\n\n\n400\nInvalid value for days (e.g. negative)\n\n\n403\nUnauthorized\n\n\n404\nAccount not found\n\n\n500\nInternal server error\n\n\n\n🧠 Notes - Internally uses account$compute_total_due_within_n_days(days). - days = 0 means today only. - Useful for dashboards and forecasting panels showing “Amount Due in Next 7, 14, or 30 Days”.\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Due Within Days"
    ]
  },
  {
    "objectID": "compute_total_due_within_days.html#summary",
    "href": "compute_total_due_within_days.html#summary",
    "title": "⏳ GET /compute_total_due_within_days",
    "section": "",
    "text": "Method: GET\nURL: /compute_total_due_within_days\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Due Within Days"
    ]
  },
  {
    "objectID": "compute_total_due_within_days.html#headers",
    "href": "compute_total_due_within_days.html#headers",
    "title": "⏳ GET /compute_total_due_within_days",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Due Within Days"
    ]
  },
  {
    "objectID": "compute_total_due_within_days.html#request-parameters",
    "href": "compute_total_due_within_days.html#request-parameters",
    "title": "⏳ GET /compute_total_due_within_days",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to evaluate\n\n\ndays\nnumber\n✅\nNumber of days to look ahead when summing due amounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Due Within Days"
    ]
  },
  {
    "objectID": "compute_total_due_within_days.html#example-request",
    "href": "compute_total_due_within_days.html#example-request",
    "title": "⏳ GET /compute_total_due_within_days",
    "section": "",
    "text": "GET /compute_total_due_within_days?uuid=acc-2024-456&days=30",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Due Within Days"
    ]
  },
  {
    "objectID": "compute_total_due_within_days.html#success-response",
    "href": "compute_total_due_within_days.html#success-response",
    "title": "⏳ GET /compute_total_due_within_days",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-456\",\n  \"total_due\": 1700.25,\n  \"within_days\": 30,\n  \"start_time\": \"2025-07-10T13:25:14.882Z\",\n  \"end_time\": \"2025-07-10T13:25:14.944Z\",\n  \"execution_time\": 0.06\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Due Within Days"
    ]
  },
  {
    "objectID": "compute_total_due_within_days.html#failure-response-examples",
    "href": "compute_total_due_within_days.html#failure-response-examples",
    "title": "⏳ GET /compute_total_due_within_days",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nUUID or days parameter missing\n\n\n400\nInvalid value for days (e.g. negative)\n\n\n403\nUnauthorized\n\n\n404\nAccount not found\n\n\n500\nInternal server error\n\n\n\n🧠 Notes - Internally uses account$compute_total_due_within_n_days(days). - days = 0 means today only. - Useful for dashboards and forecasting panels showing “Amount Due in Next 7, 14, or 30 Days”.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Due Within Days"
    ]
  },
  {
    "objectID": "compute_total_due_within_days.html#sponsors",
    "href": "compute_total_due_within_days.html#sponsors",
    "title": "⏳ GET /compute_total_due_within_days",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Due Within Days"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "📡 Personal Finance Manager API",
    "section": "",
    "text": "Welcome to the documentation for the Personal Finance Manager API — a secure backend built with Plumber in R for managing user account trees, transactions, and personal finances.\n\n\n\n\n\n\nAuth Filter\n\n\n\n\n\nPOST /register\nPOST /login\nPOST /deposit\nPOST /withdraw\nPOST /distribute\nPOST /set_child_allocations\nPOST /move_balance\nPOST /change_account_status\nPOST /set_priority\nPOST /set_due_date\nPOST /set_fixed_amount\nPOST /set_account_type\nPOST /set_account_freq\nPOST /set_account_periods\nPOST /register\n\n\n\n\n\nGET /get_balance\nGET /get_transactions\nGET /list_child_accounts\nGET /list_all_accounts\nGET /find_account_by_name\nGET /find_account_by_uuid\nGET /compute_total_balance\nGET /compute_total_due\nGET /compute_total_due_within_days\nGET /spending\nGET /total_income\nGET /allocated_amount\nGET /income_utilization\nGET /walking_amount\nGET /get_account_status\nGET /get_priority\nGET /get_due_date\nGET /get_fixed_amount\nGET /get_account_type\nGET /get_account_freq\nGET /get_account_periods\n\n\n\n\n\n\n\n\n\n\n\nMost endpoints require a valid Bearer JWT token in the Authorization header. Auth and rate limiting are enforced globally via a request filter.\nAuthorization: Bearer &lt;your-token&gt;\n\n\n\n\n\nAccount creation and persistent storage (per user)\nDeposits, withdrawals, transfers, and account hierarchy logic\nFully modular backend logic powered by the finman R package\nWorks with Shiny, React, or any frontend via HTTP\n\n\n\n\n\n\nRegister a user (/register)\nLogin to receive token (/login)\nUse your token to make authenticated requests (e.g., /deposit, /accounts)\nEach request is validated and tracked for rate limits\n\nNeed help? Contact: mutindafestus27@gmail.com\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📡 Personal Finance Manager API"
    ]
  },
  {
    "objectID": "index.html#api-reference-index",
    "href": "index.html#api-reference-index",
    "title": "📡 Personal Finance Manager API",
    "section": "",
    "text": "Auth Filter\n\n\n\n\n\nPOST /register\nPOST /login\nPOST /deposit\nPOST /withdraw\nPOST /distribute\nPOST /set_child_allocations\nPOST /move_balance\nPOST /change_account_status\nPOST /set_priority\nPOST /set_due_date\nPOST /set_fixed_amount\nPOST /set_account_type\nPOST /set_account_freq\nPOST /set_account_periods\nPOST /register\n\n\n\n\n\nGET /get_balance\nGET /get_transactions\nGET /list_child_accounts\nGET /list_all_accounts\nGET /find_account_by_name\nGET /find_account_by_uuid\nGET /compute_total_balance\nGET /compute_total_due\nGET /compute_total_due_within_days\nGET /spending\nGET /total_income\nGET /allocated_amount\nGET /income_utilization\nGET /walking_amount\nGET /get_account_status\nGET /get_priority\nGET /get_due_date\nGET /get_fixed_amount\nGET /get_account_type\nGET /get_account_freq\nGET /get_account_periods",
    "crumbs": [
      "Home",
      "📡 Personal Finance Manager API"
    ]
  },
  {
    "objectID": "index.html#authentication",
    "href": "index.html#authentication",
    "title": "📡 Personal Finance Manager API",
    "section": "",
    "text": "Most endpoints require a valid Bearer JWT token in the Authorization header. Auth and rate limiting are enforced globally via a request filter.\nAuthorization: Bearer &lt;your-token&gt;",
    "crumbs": [
      "Home",
      "📡 Personal Finance Manager API"
    ]
  },
  {
    "objectID": "index.html#core-features",
    "href": "index.html#core-features",
    "title": "📡 Personal Finance Manager API",
    "section": "",
    "text": "Account creation and persistent storage (per user)\nDeposits, withdrawals, transfers, and account hierarchy logic\nFully modular backend logic powered by the finman R package\nWorks with Shiny, React, or any frontend via HTTP",
    "crumbs": [
      "Home",
      "📡 Personal Finance Manager API"
    ]
  },
  {
    "objectID": "index.html#how-to-use-the-api",
    "href": "index.html#how-to-use-the-api",
    "title": "📡 Personal Finance Manager API",
    "section": "",
    "text": "Register a user (/register)\nLogin to receive token (/login)\nUse your token to make authenticated requests (e.g., /deposit, /accounts)\nEach request is validated and tracked for rate limits\n\nNeed help? Contact: mutindafestus27@gmail.com",
    "crumbs": [
      "Home",
      "📡 Personal Finance Manager API"
    ]
  },
  {
    "objectID": "index.html#sponsors",
    "href": "index.html#sponsors",
    "title": "📡 Personal Finance Manager API",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📡 Personal Finance Manager API"
    ]
  },
  {
    "objectID": "get_account_type.html",
    "href": "get_account_type.html",
    "title": "🔍 GET /get_account_type",
    "section": "",
    "text": "Retrieves the account type (label or identifier) of a grandchild account.\n\n\n\n\nMethod: GET\n\nURL: /get_account_type\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\n\n\n\n\n\nGET /get_account_type?uuid=acc-3245\nAuthorization: Bearer &lt;your-token&gt;\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-3245\",\n  \"account_type\": \"loan\",\n  \"start_time\": \"2025-07-10T13:12:45.210Z\",\n  \"end_time\": \"2025-07-10T13:12:45.226Z\",\n  \"execution_time\": 0.016\n}\n\n\n\n\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing or invalid UUID\n\n\n403\nAccount not found or not a grandchild account\n\n\n404\nUser tree not found or unauthorized access\n\n\n500\nInternal server error\n\n\n\n\n\n\n\n\nThis endpoint is restricted to accounts that inherit from GrandchildAccount.\nThe returned account_type may be used for UI grouping, sorting, or business rules.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Type"
    ]
  },
  {
    "objectID": "get_account_type.html#summary",
    "href": "get_account_type.html#summary",
    "title": "🔍 GET /get_account_type",
    "section": "",
    "text": "Method: GET\n\nURL: /get_account_type\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Type"
    ]
  },
  {
    "objectID": "get_account_type.html#headers",
    "href": "get_account_type.html#headers",
    "title": "🔍 GET /get_account_type",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Type"
    ]
  },
  {
    "objectID": "get_account_type.html#query-parameters",
    "href": "get_account_type.html#query-parameters",
    "title": "🔍 GET /get_account_type",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Type"
    ]
  },
  {
    "objectID": "get_account_type.html#example-request",
    "href": "get_account_type.html#example-request",
    "title": "🔍 GET /get_account_type",
    "section": "",
    "text": "GET /get_account_type?uuid=acc-3245\nAuthorization: Bearer &lt;your-token&gt;\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-3245\",\n  \"account_type\": \"loan\",\n  \"start_time\": \"2025-07-10T13:12:45.210Z\",\n  \"end_time\": \"2025-07-10T13:12:45.226Z\",\n  \"execution_time\": 0.016\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Type"
    ]
  },
  {
    "objectID": "get_account_type.html#error-responses",
    "href": "get_account_type.html#error-responses",
    "title": "🔍 GET /get_account_type",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing or invalid UUID\n\n\n403\nAccount not found or not a grandchild account\n\n\n404\nUser tree not found or unauthorized access\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Type"
    ]
  },
  {
    "objectID": "get_account_type.html#notes",
    "href": "get_account_type.html#notes",
    "title": "🔍 GET /get_account_type",
    "section": "",
    "text": "This endpoint is restricted to accounts that inherit from GrandchildAccount.\nThe returned account_type may be used for UI grouping, sorting, or business rules.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Type"
    ]
  },
  {
    "objectID": "get_account_type.html#sponsors",
    "href": "get_account_type.html#sponsors",
    "title": "🔍 GET /get_account_type",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Type"
    ]
  },
  {
    "objectID": "set_fixed_amount.html",
    "href": "set_fixed_amount.html",
    "title": "💵 POST /set_fixed_amount",
    "section": "",
    "text": "Sets a fixed amount for a grandchild account, which is used to calculate the amount_due for the current or future periods.\n\n\n\n\nMethod: POST\n\nURL: /set_fixed_amount\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\nfixed_amount\nnumber\n✅\nFixed amount per period (must be non-negative number)\n\n\n\n\n\n\n\n{\n  \"uuid\": \"acc-9999\",\n  \"fixed_amount\": 1500\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-9999\",\n  \"fixed_amount\": 1500,\n  \"amount_due\": 1500,\n  \"start_time\": \"2025-07-10T11:42:11.112Z\",\n  \"end_time\": \"2025-07-10T11:42:11.130Z\",\n  \"execution_time\": 0.018\n}\n\n\n\n\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing or invalid parameters (e.g., empty UUID or amount)\n\n\n403\nAccount is not a grandchild or access not permitted\n\n\n404\nAccount tree or specific account not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\n\nThis endpoint applies only to accounts inheriting from GrandchildAccount.\nfixed_amount must be a numeric value ≥ 0.\nOnce set, amount_due will be automatically updated based on the new amount.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Fixed Amount"
    ]
  },
  {
    "objectID": "set_fixed_amount.html#summary",
    "href": "set_fixed_amount.html#summary",
    "title": "💵 POST /set_fixed_amount",
    "section": "",
    "text": "Method: POST\n\nURL: /set_fixed_amount\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Fixed Amount"
    ]
  },
  {
    "objectID": "set_fixed_amount.html#headers",
    "href": "set_fixed_amount.html#headers",
    "title": "💵 POST /set_fixed_amount",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Fixed Amount"
    ]
  },
  {
    "objectID": "set_fixed_amount.html#json-body-parameters",
    "href": "set_fixed_amount.html#json-body-parameters",
    "title": "💵 POST /set_fixed_amount",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\nfixed_amount\nnumber\n✅\nFixed amount per period (must be non-negative number)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Fixed Amount"
    ]
  },
  {
    "objectID": "set_fixed_amount.html#example-request",
    "href": "set_fixed_amount.html#example-request",
    "title": "💵 POST /set_fixed_amount",
    "section": "",
    "text": "{\n  \"uuid\": \"acc-9999\",\n  \"fixed_amount\": 1500\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-9999\",\n  \"fixed_amount\": 1500,\n  \"amount_due\": 1500,\n  \"start_time\": \"2025-07-10T11:42:11.112Z\",\n  \"end_time\": \"2025-07-10T11:42:11.130Z\",\n  \"execution_time\": 0.018\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Fixed Amount"
    ]
  },
  {
    "objectID": "set_fixed_amount.html#error-responses",
    "href": "set_fixed_amount.html#error-responses",
    "title": "💵 POST /set_fixed_amount",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing or invalid parameters (e.g., empty UUID or amount)\n\n\n403\nAccount is not a grandchild or access not permitted\n\n\n404\nAccount tree or specific account not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Fixed Amount"
    ]
  },
  {
    "objectID": "set_fixed_amount.html#notes",
    "href": "set_fixed_amount.html#notes",
    "title": "💵 POST /set_fixed_amount",
    "section": "",
    "text": "This endpoint applies only to accounts inheriting from GrandchildAccount.\nfixed_amount must be a numeric value ≥ 0.\nOnce set, amount_due will be automatically updated based on the new amount.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Fixed Amount"
    ]
  },
  {
    "objectID": "set_fixed_amount.html#sponsors",
    "href": "set_fixed_amount.html#sponsors",
    "title": "💵 POST /set_fixed_amount",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Fixed Amount"
    ]
  },
  {
    "objectID": "get_fixed_amount.html",
    "href": "get_fixed_amount.html",
    "title": "💰 GET /get_fixed_amount",
    "section": "",
    "text": "Retrieves the fixed amount currently assigned to a grandchild account. This amount is used to compute the expected amount_due.\n\n\n\n\nMethod: GET\n\nURL: /get_fixed_amount\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account to retrieve\n\n\n\n\n\n\n\nGET /get_fixed_amount?uuid=acc-12345 HTTP/1.1\nAuthorization: Bearer your-token\nContent-Type: application/json\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-12345\",\n  \"fixed_amount\": 1500,\n  \"start_time\": \"2025-07-10T12:15:42.101Z\",\n  \"end_time\": \"2025-07-10T12:15:42.116Z\",\n  \"execution_time\": 0.015\n}\n\n\n\n\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing UUID or invalid query parameter\n\n\n403\nNot a grandchild account or unauthorized access\n\n\n404\nAccount tree or account not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\n\nThis endpoint is strictly for accounts inheriting from GrandchildAccount.\nIt does not set or change the value — use /set_fixed_amount to update it.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Fixed Amount"
    ]
  },
  {
    "objectID": "get_fixed_amount.html#summary",
    "href": "get_fixed_amount.html#summary",
    "title": "💰 GET /get_fixed_amount",
    "section": "",
    "text": "Method: GET\n\nURL: /get_fixed_amount\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Fixed Amount"
    ]
  },
  {
    "objectID": "get_fixed_amount.html#headers",
    "href": "get_fixed_amount.html#headers",
    "title": "💰 GET /get_fixed_amount",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Fixed Amount"
    ]
  },
  {
    "objectID": "get_fixed_amount.html#query-parameters",
    "href": "get_fixed_amount.html#query-parameters",
    "title": "💰 GET /get_fixed_amount",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account to retrieve",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Fixed Amount"
    ]
  },
  {
    "objectID": "get_fixed_amount.html#example-request",
    "href": "get_fixed_amount.html#example-request",
    "title": "💰 GET /get_fixed_amount",
    "section": "",
    "text": "GET /get_fixed_amount?uuid=acc-12345 HTTP/1.1\nAuthorization: Bearer your-token\nContent-Type: application/json\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-12345\",\n  \"fixed_amount\": 1500,\n  \"start_time\": \"2025-07-10T12:15:42.101Z\",\n  \"end_time\": \"2025-07-10T12:15:42.116Z\",\n  \"execution_time\": 0.015\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Fixed Amount"
    ]
  },
  {
    "objectID": "get_fixed_amount.html#error-responses",
    "href": "get_fixed_amount.html#error-responses",
    "title": "💰 GET /get_fixed_amount",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing UUID or invalid query parameter\n\n\n403\nNot a grandchild account or unauthorized access\n\n\n404\nAccount tree or account not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Fixed Amount"
    ]
  },
  {
    "objectID": "get_fixed_amount.html#notes",
    "href": "get_fixed_amount.html#notes",
    "title": "💰 GET /get_fixed_amount",
    "section": "",
    "text": "This endpoint is strictly for accounts inheriting from GrandchildAccount.\nIt does not set or change the value — use /set_fixed_amount to update it.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Fixed Amount"
    ]
  },
  {
    "objectID": "get_fixed_amount.html#sponsors",
    "href": "get_fixed_amount.html#sponsors",
    "title": "💰 GET /get_fixed_amount",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Fixed Amount"
    ]
  },
  {
    "objectID": "allocated_amount.html",
    "href": "allocated_amount.html",
    "title": "🪙 GET /allocated_amount",
    "section": "",
    "text": "Returns the total allocated amount (deposits) for an account and all its child accounts in a specified date range.\n\n\n\n\nMethod: GET\nURL: /allocated_amount\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to compute allocation for\n\n\nfrom\nstring\n❌\nStart date (YYYY-MM-DD). Defaults to earliest date\n\n\nto\nstring\n❌\nEnd date (YYYY-MM-DD). Defaults to today\n\n\n\n\n\n\n\nGET /allocated_amount?uuid=acc-2023-001&from=2024-01-01&to=2024-12-31\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2023-001\",\n  \"from\": \"2024-01-01\",\n  \"to\": \"2024-12-31\",\n  \"allocated_amount\": 21500,\n  \"start_time\": \"2025-07-10T15:42:31.115Z\",\n  \"end_time\": \"2025-07-10T15:42:31.162Z\",\n  \"execution_time\": 0.047\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nUUID missing or invalid\n\n\n403\nUnauthorized access\n\n\n404\nAccount not found\n\n\n500\nInternal server error or invalid date\n\n\n\n\n\n\n\nInternally uses account$allocated_amount(date_range).\nIncludes all deposits allocated to the account and its descendants.\nIf no from or to is provided, defaults to full history.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Allocated Amount"
    ]
  },
  {
    "objectID": "allocated_amount.html#summary",
    "href": "allocated_amount.html#summary",
    "title": "🪙 GET /allocated_amount",
    "section": "",
    "text": "Method: GET\nURL: /allocated_amount\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Allocated Amount"
    ]
  },
  {
    "objectID": "allocated_amount.html#headers",
    "href": "allocated_amount.html#headers",
    "title": "🪙 GET /allocated_amount",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Allocated Amount"
    ]
  },
  {
    "objectID": "allocated_amount.html#request-parameters",
    "href": "allocated_amount.html#request-parameters",
    "title": "🪙 GET /allocated_amount",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to compute allocation for\n\n\nfrom\nstring\n❌\nStart date (YYYY-MM-DD). Defaults to earliest date\n\n\nto\nstring\n❌\nEnd date (YYYY-MM-DD). Defaults to today",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Allocated Amount"
    ]
  },
  {
    "objectID": "allocated_amount.html#example-request",
    "href": "allocated_amount.html#example-request",
    "title": "🪙 GET /allocated_amount",
    "section": "",
    "text": "GET /allocated_amount?uuid=acc-2023-001&from=2024-01-01&to=2024-12-31",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Allocated Amount"
    ]
  },
  {
    "objectID": "allocated_amount.html#success-response",
    "href": "allocated_amount.html#success-response",
    "title": "🪙 GET /allocated_amount",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2023-001\",\n  \"from\": \"2024-01-01\",\n  \"to\": \"2024-12-31\",\n  \"allocated_amount\": 21500,\n  \"start_time\": \"2025-07-10T15:42:31.115Z\",\n  \"end_time\": \"2025-07-10T15:42:31.162Z\",\n  \"execution_time\": 0.047\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Allocated Amount"
    ]
  },
  {
    "objectID": "allocated_amount.html#failure-response-examples",
    "href": "allocated_amount.html#failure-response-examples",
    "title": "🪙 GET /allocated_amount",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nUUID missing or invalid\n\n\n403\nUnauthorized access\n\n\n404\nAccount not found\n\n\n500\nInternal server error or invalid date",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Allocated Amount"
    ]
  },
  {
    "objectID": "allocated_amount.html#notes",
    "href": "allocated_amount.html#notes",
    "title": "🪙 GET /allocated_amount",
    "section": "",
    "text": "Internally uses account$allocated_amount(date_range).\nIncludes all deposits allocated to the account and its descendants.\nIf no from or to is provided, defaults to full history.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Allocated Amount"
    ]
  },
  {
    "objectID": "allocated_amount.html#sponsors",
    "href": "allocated_amount.html#sponsors",
    "title": "🪙 GET /allocated_amount",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Allocated Amount"
    ]
  },
  {
    "objectID": "distribute.html",
    "href": "distribute.html",
    "title": "🔁 POST /distribute",
    "section": "",
    "text": "Distributes a specified amount from a parent account to its child accounts according to their allocation rules.\n\n\n\n\nMethod: POST\nURL: /distribute\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the parent account\n\n\namount\nfloat\n✅\nAmount to distribute (must be &gt; 0)\n\n\ntransaction\nstring\n❌\nOptional transaction reference (autogenerated if NULL)\n\n\ninitiated_by\nstring\n❌\nWho performed the distribution (default = “System”)\n\n\n\n\n\n\n\n{\n  \"uuid\": \"parent-acc-2023-001\",\n  \"amount\": 5000,\n  \"transaction\": \"dist-INV004\",\n  \"by\": \"System\"\n}\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Distributed 5000 from Needs\",\n  \"uuid\": \"parent-acc-2023-001\",\n  \"start_time\": \"2025-07-10T10:01:15.120Z\",\n  \"end_time\": \"2025-07-10T10:01:15.180Z\",\n  \"execution_time\": 0.06\n}\n\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n403\nUnauthorized to access the account\n\n\n404\nAccount not found\n\n\n500\nInvalid amount, zero, negative, or missing account\n\n\n\n\n\n\n\n\nAutomatically uses account$distribute_to_children() internally.\nLocks the account tree for safe concurrent execution.\nWill fail if amount is missing, zero, or negative.\nIf transaction reference is missing, one is auto-generated.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Distribute Funds"
    ]
  },
  {
    "objectID": "distribute.html#summary",
    "href": "distribute.html#summary",
    "title": "🔁 POST /distribute",
    "section": "",
    "text": "Method: POST\nURL: /distribute\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Distribute Funds"
    ]
  },
  {
    "objectID": "distribute.html#headers",
    "href": "distribute.html#headers",
    "title": "🔁 POST /distribute",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Distribute Funds"
    ]
  },
  {
    "objectID": "distribute.html#request-parameters",
    "href": "distribute.html#request-parameters",
    "title": "🔁 POST /distribute",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the parent account\n\n\namount\nfloat\n✅\nAmount to distribute (must be &gt; 0)\n\n\ntransaction\nstring\n❌\nOptional transaction reference (autogenerated if NULL)\n\n\ninitiated_by\nstring\n❌\nWho performed the distribution (default = “System”)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Distribute Funds"
    ]
  },
  {
    "objectID": "distribute.html#example-request",
    "href": "distribute.html#example-request",
    "title": "🔁 POST /distribute",
    "section": "",
    "text": "{\n  \"uuid\": \"parent-acc-2023-001\",\n  \"amount\": 5000,\n  \"transaction\": \"dist-INV004\",\n  \"by\": \"System\"\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Distribute Funds"
    ]
  },
  {
    "objectID": "distribute.html#success-response",
    "href": "distribute.html#success-response",
    "title": "🔁 POST /distribute",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Distributed 5000 from Needs\",\n  \"uuid\": \"parent-acc-2023-001\",\n  \"start_time\": \"2025-07-10T10:01:15.120Z\",\n  \"end_time\": \"2025-07-10T10:01:15.180Z\",\n  \"execution_time\": 0.06\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Distribute Funds"
    ]
  },
  {
    "objectID": "distribute.html#failure-response-examples",
    "href": "distribute.html#failure-response-examples",
    "title": "🔁 POST /distribute",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n403\nUnauthorized to access the account\n\n\n404\nAccount not found\n\n\n500\nInvalid amount, zero, negative, or missing account",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Distribute Funds"
    ]
  },
  {
    "objectID": "distribute.html#notes",
    "href": "distribute.html#notes",
    "title": "🔁 POST /distribute",
    "section": "",
    "text": "Automatically uses account$distribute_to_children() internally.\nLocks the account tree for safe concurrent execution.\nWill fail if amount is missing, zero, or negative.\nIf transaction reference is missing, one is auto-generated.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Distribute Funds"
    ]
  },
  {
    "objectID": "distribute.html#sponsors",
    "href": "distribute.html#sponsors",
    "title": "🔁 POST /distribute",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Distribute Funds"
    ]
  },
  {
    "objectID": "delete.html",
    "href": "delete.html",
    "title": "🗑️ DELETE /delete",
    "section": "",
    "text": "Deletes a user account/sub accounts. If the target account is the root account its associated data file is removed, if a sub-account, only the account node is removed. Requires a valid uuid for target account parameter. Returns success message or appropriate error if the user doesn’t exist or deletion fails.\n\n\n\nMethod: DELETE URL: /delete Auth: Not Required Tag: accounts —\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUnique account identifier uuid\n\n\n\n\n\n\nDELETE /delete?uuid=4a76343a-e971-4bd7-b8c4-5fa9fccee433\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Account for user_id '4a76343a-e971-4bd7-b8c4-5fa9fccee433' deleted successfully.\",\n  \"start_time\": \"2025-07-17T08:34:02.123Z\",\n  \"end_time\": \"2025-07-17T08:34:02.160Z\",\n  \"execution_time\": 0.037\n}\n\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nMissing required user_id\n\n\n404\nAccount for given user_id not found\n\n\n500\nInternal server error during deletion\n\n\n\n{\n  \"success\": false,\n  \"status\": 404,\n  \"error\": \"Account for user_id 'xyz' does not exist.\",\n  \"start_time\": \"2025-07-17T08:34:02.123Z\",\n  \"end_time\": \"2025-07-17T08:34:02.150Z\",\n  \"execution_time\": 0.027\n}\n\n\n\n\n\nThe user ID is used to identify the user’s account file (e.g., account_tree.Rds) in persistent storage.\nThe operation is wrapped in a file lock to ensure safe concurrent access.\nNo JWT token required, but the endpoint is still protected by rate limiting and exponential backoff to prevent abuse.\nThis is a destructive operation and should be called with caution.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "Delete",
      "Delete"
    ]
  },
  {
    "objectID": "delete.html#summary",
    "href": "delete.html#summary",
    "title": "🗑️ DELETE /delete",
    "section": "",
    "text": "Method: DELETE URL: /delete Auth: Not Required Tag: accounts —",
    "crumbs": [
      "Home",
      "Delete",
      "Delete"
    ]
  },
  {
    "objectID": "delete.html#headers",
    "href": "delete.html#headers",
    "title": "🗑️ DELETE /delete",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "Delete",
      "Delete"
    ]
  },
  {
    "objectID": "delete.html#request-parameters",
    "href": "delete.html#request-parameters",
    "title": "🗑️ DELETE /delete",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUnique account identifier uuid",
    "crumbs": [
      "Home",
      "Delete",
      "Delete"
    ]
  },
  {
    "objectID": "delete.html#example-request-query-parameter",
    "href": "delete.html#example-request-query-parameter",
    "title": "🗑️ DELETE /delete",
    "section": "",
    "text": "DELETE /delete?uuid=4a76343a-e971-4bd7-b8c4-5fa9fccee433",
    "crumbs": [
      "Home",
      "Delete",
      "Delete"
    ]
  },
  {
    "objectID": "delete.html#success-response",
    "href": "delete.html#success-response",
    "title": "🗑️ DELETE /delete",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Account for user_id '4a76343a-e971-4bd7-b8c4-5fa9fccee433' deleted successfully.\",\n  \"start_time\": \"2025-07-17T08:34:02.123Z\",\n  \"end_time\": \"2025-07-17T08:34:02.160Z\",\n  \"execution_time\": 0.037\n}",
    "crumbs": [
      "Home",
      "Delete",
      "Delete"
    ]
  },
  {
    "objectID": "delete.html#failure-response-examples",
    "href": "delete.html#failure-response-examples",
    "title": "🗑️ DELETE /delete",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nMissing required user_id\n\n\n404\nAccount for given user_id not found\n\n\n500\nInternal server error during deletion\n\n\n\n{\n  \"success\": false,\n  \"status\": 404,\n  \"error\": \"Account for user_id 'xyz' does not exist.\",\n  \"start_time\": \"2025-07-17T08:34:02.123Z\",\n  \"end_time\": \"2025-07-17T08:34:02.150Z\",\n  \"execution_time\": 0.027\n}",
    "crumbs": [
      "Home",
      "Delete",
      "Delete"
    ]
  },
  {
    "objectID": "delete.html#notes",
    "href": "delete.html#notes",
    "title": "🗑️ DELETE /delete",
    "section": "",
    "text": "The user ID is used to identify the user’s account file (e.g., account_tree.Rds) in persistent storage.\nThe operation is wrapped in a file lock to ensure safe concurrent access.\nNo JWT token required, but the endpoint is still protected by rate limiting and exponential backoff to prevent abuse.\nThis is a destructive operation and should be called with caution.",
    "crumbs": [
      "Home",
      "Delete",
      "Delete"
    ]
  },
  {
    "objectID": "delete.html#sponsors",
    "href": "delete.html#sponsors",
    "title": "🗑️ DELETE /delete",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "Delete",
      "Delete"
    ]
  },
  {
    "objectID": "compute_total_balance.html",
    "href": "compute_total_balance.html",
    "title": "📊 GET /compute_total_balance",
    "section": "",
    "text": "Returns the total balance of a specified account including all its children and descendants.\n\n\n\n\nMethod: GET\nURL: /compute_total_balance\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to compute total balance for\n\n\n\n\n\n\n\nGET /compute_total_balance?uuid=acc-2024-456\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-456\",\n  \"total_balance\": 18450.75,\n  \"start_time\": \"2025-07-10T13:02:15.120Z\",\n  \"end_time\": \"2025-07-10T13:02:15.180Z\",\n  \"execution_time\": 0.06\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nMissing or invalid UUID\n\n\n403\nUnauthorized to access the account\n\n\n404\nAccount not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\nInternally calls account$compute_total_balance().\nThis is a read-only operation (no locking needed).\nIdeal for getting an overview of full funds under a category like “Needs” or “Investments”.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Balance"
    ]
  },
  {
    "objectID": "compute_total_balance.html#summary",
    "href": "compute_total_balance.html#summary",
    "title": "📊 GET /compute_total_balance",
    "section": "",
    "text": "Method: GET\nURL: /compute_total_balance\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Balance"
    ]
  },
  {
    "objectID": "compute_total_balance.html#headers",
    "href": "compute_total_balance.html#headers",
    "title": "📊 GET /compute_total_balance",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Balance"
    ]
  },
  {
    "objectID": "compute_total_balance.html#request-parameters",
    "href": "compute_total_balance.html#request-parameters",
    "title": "📊 GET /compute_total_balance",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to compute total balance for",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Balance"
    ]
  },
  {
    "objectID": "compute_total_balance.html#example-request",
    "href": "compute_total_balance.html#example-request",
    "title": "📊 GET /compute_total_balance",
    "section": "",
    "text": "GET /compute_total_balance?uuid=acc-2024-456",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Balance"
    ]
  },
  {
    "objectID": "compute_total_balance.html#success-response",
    "href": "compute_total_balance.html#success-response",
    "title": "📊 GET /compute_total_balance",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-456\",\n  \"total_balance\": 18450.75,\n  \"start_time\": \"2025-07-10T13:02:15.120Z\",\n  \"end_time\": \"2025-07-10T13:02:15.180Z\",\n  \"execution_time\": 0.06\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Balance"
    ]
  },
  {
    "objectID": "compute_total_balance.html#failure-response-examples",
    "href": "compute_total_balance.html#failure-response-examples",
    "title": "📊 GET /compute_total_balance",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nMissing or invalid UUID\n\n\n403\nUnauthorized to access the account\n\n\n404\nAccount not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Balance"
    ]
  },
  {
    "objectID": "compute_total_balance.html#notes",
    "href": "compute_total_balance.html#notes",
    "title": "📊 GET /compute_total_balance",
    "section": "",
    "text": "Internally calls account$compute_total_balance().\nThis is a read-only operation (no locking needed).\nIdeal for getting an overview of full funds under a category like “Needs” or “Investments”.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Balance"
    ]
  },
  {
    "objectID": "compute_total_balance.html#sponsors",
    "href": "compute_total_balance.html#sponsors",
    "title": "📊 GET /compute_total_balance",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Balance"
    ]
  },
  {
    "objectID": "get_account_status.html",
    "href": "get_account_status.html",
    "title": "🟢 GET /get_account_status",
    "section": "",
    "text": "Retrieves the current status (active, inactive, or closed) of a child or grandchild account.\n\n\n\n\nMethod: GET\nURL: /get_account_status\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the child/grandchild account\n\n\n\n\n\n\n\nGET /get_account_status?uuid=a3d5-xyz-7890\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"a3d5-xyz-7890\",\n  \"account_status\": \"inactive\",\n  \"start_time\": \"2025-07-10T07:32:10.145Z\",\n  \"end_time\": \"2025-07-10T07:32:10.160Z\",\n  \"execution_time\": 0.015\n}\n\n\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing uuid parameter\n\n\n403\nAccount not found or not a child/grandchild account\n\n\n404\nAccount tree not found (if user unauthorized or file missing)\n\n\n500\nUnexpected internal server error\n\n\n\n\n\n\n\nThis endpoint strictly checks that the account is a subclass of ChildAccount.\nThis check prevents status queries for Main or Parent accounts.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Status"
    ]
  },
  {
    "objectID": "get_account_status.html#summary",
    "href": "get_account_status.html#summary",
    "title": "🟢 GET /get_account_status",
    "section": "",
    "text": "Method: GET\nURL: /get_account_status\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Status"
    ]
  },
  {
    "objectID": "get_account_status.html#headers",
    "href": "get_account_status.html#headers",
    "title": "🟢 GET /get_account_status",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Status"
    ]
  },
  {
    "objectID": "get_account_status.html#query-parameters",
    "href": "get_account_status.html#query-parameters",
    "title": "🟢 GET /get_account_status",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the child/grandchild account",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Status"
    ]
  },
  {
    "objectID": "get_account_status.html#example-request",
    "href": "get_account_status.html#example-request",
    "title": "🟢 GET /get_account_status",
    "section": "",
    "text": "GET /get_account_status?uuid=a3d5-xyz-7890",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Status"
    ]
  },
  {
    "objectID": "get_account_status.html#success-response",
    "href": "get_account_status.html#success-response",
    "title": "🟢 GET /get_account_status",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"a3d5-xyz-7890\",\n  \"account_status\": \"inactive\",\n  \"start_time\": \"2025-07-10T07:32:10.145Z\",\n  \"end_time\": \"2025-07-10T07:32:10.160Z\",\n  \"execution_time\": 0.015\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Status"
    ]
  },
  {
    "objectID": "get_account_status.html#error-responses",
    "href": "get_account_status.html#error-responses",
    "title": "🟢 GET /get_account_status",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing uuid parameter\n\n\n403\nAccount not found or not a child/grandchild account\n\n\n404\nAccount tree not found (if user unauthorized or file missing)\n\n\n500\nUnexpected internal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Status"
    ]
  },
  {
    "objectID": "get_account_status.html#notes",
    "href": "get_account_status.html#notes",
    "title": "🟢 GET /get_account_status",
    "section": "",
    "text": "This endpoint strictly checks that the account is a subclass of ChildAccount.\nThis check prevents status queries for Main or Parent accounts.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Account Status"
    ]
  },
  {
    "objectID": "set_account_freq.html",
    "href": "set_account_freq.html",
    "title": "🔁 POST /set_account_freq",
    "section": "",
    "text": "Sets or updates the frequency of a grandchild account, which controls the budgeting or due cycle of the account.\n\n\n\n\nMethod: POST\n\nURL: /set_account_freq\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/x-www-form-urlencoded\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\naccount_freq\nstring\n✅\nFrequency to assign (e.g., “Monthly”, “Biweekly”)\n\n\n\n\n\n\n\n{\n  \"uuid\": \"acc-7890\",\n  \"account_freq\": 30\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Frequency for Internet set to Monthly\",\n  \"uuid\": \"acc-7890\",\n  \"freq\": 30,\n  \"start_time\": \"2025-07-10T15:21:12.003Z\",\n  \"end_time\": \"2025-07-10T15:21:12.020Z\",\n  \"execution_time\": 0.017\n}\n\n\n\n\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nMissing uuid or account_freq\n\n\n403\nAccount not found or not a grandchild account\n\n\n404\nUser not found or unauthorized access\n\n\n500\nInternal server error or failed to update account\n\n\n\n\n\n\n\n\nThis endpoint only applies to accounts that inherit from GrandchildAccount.\nFrequency is useful when calculating periodic due amounts or expected contributions.\nValid values depend on how your logic is implemented: e.g., 30, 7, 1, etc.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Frequency"
    ]
  },
  {
    "objectID": "set_account_freq.html#summary",
    "href": "set_account_freq.html#summary",
    "title": "🔁 POST /set_account_freq",
    "section": "",
    "text": "Method: POST\n\nURL: /set_account_freq\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Frequency"
    ]
  },
  {
    "objectID": "set_account_freq.html#headers",
    "href": "set_account_freq.html#headers",
    "title": "🔁 POST /set_account_freq",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/x-www-form-urlencoded",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Frequency"
    ]
  },
  {
    "objectID": "set_account_freq.html#form-parameters",
    "href": "set_account_freq.html#form-parameters",
    "title": "🔁 POST /set_account_freq",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\naccount_freq\nstring\n✅\nFrequency to assign (e.g., “Monthly”, “Biweekly”)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Frequency"
    ]
  },
  {
    "objectID": "set_account_freq.html#example-request",
    "href": "set_account_freq.html#example-request",
    "title": "🔁 POST /set_account_freq",
    "section": "",
    "text": "{\n  \"uuid\": \"acc-7890\",\n  \"account_freq\": 30\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Frequency for Internet set to Monthly\",\n  \"uuid\": \"acc-7890\",\n  \"freq\": 30,\n  \"start_time\": \"2025-07-10T15:21:12.003Z\",\n  \"end_time\": \"2025-07-10T15:21:12.020Z\",\n  \"execution_time\": 0.017\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Frequency"
    ]
  },
  {
    "objectID": "set_account_freq.html#error-responses",
    "href": "set_account_freq.html#error-responses",
    "title": "🔁 POST /set_account_freq",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nMissing uuid or account_freq\n\n\n403\nAccount not found or not a grandchild account\n\n\n404\nUser not found or unauthorized access\n\n\n500\nInternal server error or failed to update account",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Frequency"
    ]
  },
  {
    "objectID": "set_account_freq.html#notes",
    "href": "set_account_freq.html#notes",
    "title": "🔁 POST /set_account_freq",
    "section": "",
    "text": "This endpoint only applies to accounts that inherit from GrandchildAccount.\nFrequency is useful when calculating periodic due amounts or expected contributions.\nValid values depend on how your logic is implemented: e.g., 30, 7, 1, etc.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Frequency"
    ]
  },
  {
    "objectID": "set_account_freq.html#sponsors",
    "href": "set_account_freq.html#sponsors",
    "title": "🔁 POST /set_account_freq",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Frequency"
    ]
  },
  {
    "objectID": "withdraw.html",
    "href": "withdraw.html",
    "title": "💸 POST /withdraw",
    "section": "",
    "text": "Withdraws funds from a user’s account. Requires a valid JWT token and a UUID identifying the account. Updates balances and persists changes securely.\n\n\n\n\nMethod: POST\nURL: /withdraw\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to withdraw from\n\n\namount\nfloat\n✅\nAmount to withdraw\n\n\nchannel\nstring\n✅\nWithdrawal channel (e.g., mpesa, bank)\n\n\ntransaction_number\nstring\n❌\nOptional reference number\n\n\ninitiated_by\nstring\n❌\nWho initiated the withdrawal (default = “User”)\n\n\ntransaction_date\nstring\n❌\nTimestamp of withdrawal (default = now)\n\n\n\n\n\n\n\n{\n  \"uuid\": \"acc-2023-savings-abc123\",\n  \"amount\": 1000,\n  \"channel\": \"bank\",\n  \"transaction_number\": \"BANK54321\",\n  \"initiated_by\": \"User\"\n}\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"account_uuid\": \"acc-2023-savings-abc123\",\n  \"balance\": 2300,\n  \"start_time\": \"2025-07-10T09:30:00.123Z\",\n  \"end_time\": \"2025-07-10T09:30:00.180Z\",\n  \"execution_time\": 0.057\n}\n\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nInvalid withdrawal amount\n\n\n403\nNot authorized for this account\n\n\n404\nAccount not found\n\n\n500\nServer error / internal failure\n\n\n\n\n\n\n\n\nWithdrawals use with_account_lock() to ensure safe concurrency.\nErrors are structured with timestamps for traceability.\nYou must have sufficient permissions for the account.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Withdraw"
    ]
  },
  {
    "objectID": "withdraw.html#summary",
    "href": "withdraw.html#summary",
    "title": "💸 POST /withdraw",
    "section": "",
    "text": "Method: POST\nURL: /withdraw\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Withdraw"
    ]
  },
  {
    "objectID": "withdraw.html#headers",
    "href": "withdraw.html#headers",
    "title": "💸 POST /withdraw",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Withdraw"
    ]
  },
  {
    "objectID": "withdraw.html#request-parameters",
    "href": "withdraw.html#request-parameters",
    "title": "💸 POST /withdraw",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to withdraw from\n\n\namount\nfloat\n✅\nAmount to withdraw\n\n\nchannel\nstring\n✅\nWithdrawal channel (e.g., mpesa, bank)\n\n\ntransaction_number\nstring\n❌\nOptional reference number\n\n\ninitiated_by\nstring\n❌\nWho initiated the withdrawal (default = “User”)\n\n\ntransaction_date\nstring\n❌\nTimestamp of withdrawal (default = now)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Withdraw"
    ]
  },
  {
    "objectID": "withdraw.html#example-request-body",
    "href": "withdraw.html#example-request-body",
    "title": "💸 POST /withdraw",
    "section": "",
    "text": "{\n  \"uuid\": \"acc-2023-savings-abc123\",\n  \"amount\": 1000,\n  \"channel\": \"bank\",\n  \"transaction_number\": \"BANK54321\",\n  \"initiated_by\": \"User\"\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Withdraw"
    ]
  },
  {
    "objectID": "withdraw.html#success-response",
    "href": "withdraw.html#success-response",
    "title": "💸 POST /withdraw",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"account_uuid\": \"acc-2023-savings-abc123\",\n  \"balance\": 2300,\n  \"start_time\": \"2025-07-10T09:30:00.123Z\",\n  \"end_time\": \"2025-07-10T09:30:00.180Z\",\n  \"execution_time\": 0.057\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Withdraw"
    ]
  },
  {
    "objectID": "withdraw.html#failure-responses",
    "href": "withdraw.html#failure-responses",
    "title": "💸 POST /withdraw",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nInvalid withdrawal amount\n\n\n403\nNot authorized for this account\n\n\n404\nAccount not found\n\n\n500\nServer error / internal failure",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Withdraw"
    ]
  },
  {
    "objectID": "withdraw.html#notes",
    "href": "withdraw.html#notes",
    "title": "💸 POST /withdraw",
    "section": "",
    "text": "Withdrawals use with_account_lock() to ensure safe concurrency.\nErrors are structured with timestamps for traceability.\nYou must have sufficient permissions for the account.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Withdraw"
    ]
  },
  {
    "objectID": "withdraw.html#sponsors",
    "href": "withdraw.html#sponsors",
    "title": "💸 POST /withdraw",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Withdraw"
    ]
  },
  {
    "objectID": "list_child_accounts.html",
    "href": "list_child_accounts.html",
    "title": "🧾 GET /list_child_accounts",
    "section": "",
    "text": "Retrieves all child account names under a specified parent account.\n\n\n\n\nMethod: GET\n\nURL: /list_child_accounts\n\nAuth: Required\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the parent account\n\n\n\n\n\n\n\nGET /list_child_accounts?uuid=parent-acc-2024-001\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"parent-acc-2024-001\",\n  \"account_name\": \"Goals\",\n  \"child_account_names\": [\"Farming\", \"Education\"],\n  \"child_count\": 2,\n  \"start_time\": \"2025-07-10T10:40:12.004Z\",\n  \"end_time\": \"2025-07-10T10:40:12.029Z\",\n  \"execution_time\": 0.025\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n403\nUnauthorized to access the account\n\n\n404\nParent account not found\n\n\n500\nInternal error\n\n\n\n\n\n\n\nThis is a read-only operation — no lock is acquired.\nThe list only includes direct children, not grandchildren.\nUsed for account navigation, visualization, and hierarchy management.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List Child Accounts"
    ]
  },
  {
    "objectID": "list_child_accounts.html#summary",
    "href": "list_child_accounts.html#summary",
    "title": "🧾 GET /list_child_accounts",
    "section": "",
    "text": "Method: GET\n\nURL: /list_child_accounts\n\nAuth: Required\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List Child Accounts"
    ]
  },
  {
    "objectID": "list_child_accounts.html#headers",
    "href": "list_child_accounts.html#headers",
    "title": "🧾 GET /list_child_accounts",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List Child Accounts"
    ]
  },
  {
    "objectID": "list_child_accounts.html#request-parameters",
    "href": "list_child_accounts.html#request-parameters",
    "title": "🧾 GET /list_child_accounts",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the parent account",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List Child Accounts"
    ]
  },
  {
    "objectID": "list_child_accounts.html#example-request",
    "href": "list_child_accounts.html#example-request",
    "title": "🧾 GET /list_child_accounts",
    "section": "",
    "text": "GET /list_child_accounts?uuid=parent-acc-2024-001",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List Child Accounts"
    ]
  },
  {
    "objectID": "list_child_accounts.html#success-response",
    "href": "list_child_accounts.html#success-response",
    "title": "🧾 GET /list_child_accounts",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"parent-acc-2024-001\",\n  \"account_name\": \"Goals\",\n  \"child_account_names\": [\"Farming\", \"Education\"],\n  \"child_count\": 2,\n  \"start_time\": \"2025-07-10T10:40:12.004Z\",\n  \"end_time\": \"2025-07-10T10:40:12.029Z\",\n  \"execution_time\": 0.025\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List Child Accounts"
    ]
  },
  {
    "objectID": "list_child_accounts.html#failure-response-examples",
    "href": "list_child_accounts.html#failure-response-examples",
    "title": "🧾 GET /list_child_accounts",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n403\nUnauthorized to access the account\n\n\n404\nParent account not found\n\n\n500\nInternal error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List Child Accounts"
    ]
  },
  {
    "objectID": "list_child_accounts.html#notes",
    "href": "list_child_accounts.html#notes",
    "title": "🧾 GET /list_child_accounts",
    "section": "",
    "text": "This is a read-only operation — no lock is acquired.\nThe list only includes direct children, not grandchildren.\nUsed for account navigation, visualization, and hierarchy management.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List Child Accounts"
    ]
  },
  {
    "objectID": "list_child_accounts.html#sponsors",
    "href": "list_child_accounts.html#sponsors",
    "title": "🧾 GET /list_child_accounts",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "List Child Accounts"
    ]
  },
  {
    "objectID": "get_transactions.html",
    "href": "get_transactions.html",
    "title": "📄 GET /get_transactions",
    "section": "",
    "text": "Retrieves the full transaction history (deposits, withdrawals, distributions, etc.) for a given account. Requires authentication and the user must be either the account owner or an admin.\n\n\n\n\nMethod: GET\nURL: /get_transactions\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to inspect\n\n\n\n\n\n\n\nGET /get_transactions?uuid=acc-2024-123\n\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-123\",\n  \"transaction_count\": 3,\n  \"transactions\": [\n    {\n      \"type\": \"deposit\",\n      \"amount\": 1000,\n      \"channel\": \"mpesa\",\n      \"by\": \"User\",\n      \"timestamp\": \"2025-07-10 08:00:00\"\n    },\n    {\n      \"type\": \"withdraw\",\n      \"amount\": 400,\n      \"channel\": \"bank\",\n      \"by\": \"User\",\n      \"timestamp\": \"2025-07-11 10:15:00\"\n    },\n    {\n      \"type\": \"distribute\",\n      \"amount\": 600,\n      \"by\": \"System\",\n      \"timestamp\": \"2025-07-12 09:00:00\"\n    }\n  ],\n  \"start_time\": \"2025-07-10T10:01:15.120Z\",\n  \"end_time\": \"2025-07-10T10:01:15.150Z\",\n  \"execution_time\": 0.03\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n403\nUnauthorized to access the account\n\n\n404\nAccount not found\n\n\n500\nServer-side or internal error\n\n\n\n\n\n\n\nReturns an array of transactions sorted chronologically (if implemented in your backend).\nYou must include a valid Bearer token to access this endpoint.\nReturns an appropriate error if the account does not exist or is not accessible by the caller.\nAccount locking is not required since this is a read-only operation.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Transactions"
    ]
  },
  {
    "objectID": "get_transactions.html#summary",
    "href": "get_transactions.html#summary",
    "title": "📄 GET /get_transactions",
    "section": "",
    "text": "Method: GET\nURL: /get_transactions\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Transactions"
    ]
  },
  {
    "objectID": "get_transactions.html#headers",
    "href": "get_transactions.html#headers",
    "title": "📄 GET /get_transactions",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Transactions"
    ]
  },
  {
    "objectID": "get_transactions.html#query-parameters",
    "href": "get_transactions.html#query-parameters",
    "title": "📄 GET /get_transactions",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to inspect",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Transactions"
    ]
  },
  {
    "objectID": "get_transactions.html#example-request",
    "href": "get_transactions.html#example-request",
    "title": "📄 GET /get_transactions",
    "section": "",
    "text": "GET /get_transactions?uuid=acc-2024-123",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Transactions"
    ]
  },
  {
    "objectID": "get_transactions.html#success-response",
    "href": "get_transactions.html#success-response",
    "title": "📄 GET /get_transactions",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-123\",\n  \"transaction_count\": 3,\n  \"transactions\": [\n    {\n      \"type\": \"deposit\",\n      \"amount\": 1000,\n      \"channel\": \"mpesa\",\n      \"by\": \"User\",\n      \"timestamp\": \"2025-07-10 08:00:00\"\n    },\n    {\n      \"type\": \"withdraw\",\n      \"amount\": 400,\n      \"channel\": \"bank\",\n      \"by\": \"User\",\n      \"timestamp\": \"2025-07-11 10:15:00\"\n    },\n    {\n      \"type\": \"distribute\",\n      \"amount\": 600,\n      \"by\": \"System\",\n      \"timestamp\": \"2025-07-12 09:00:00\"\n    }\n  ],\n  \"start_time\": \"2025-07-10T10:01:15.120Z\",\n  \"end_time\": \"2025-07-10T10:01:15.150Z\",\n  \"execution_time\": 0.03\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Transactions"
    ]
  },
  {
    "objectID": "get_transactions.html#failure-response-examples",
    "href": "get_transactions.html#failure-response-examples",
    "title": "📄 GET /get_transactions",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n403\nUnauthorized to access the account\n\n\n404\nAccount not found\n\n\n500\nServer-side or internal error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Transactions"
    ]
  },
  {
    "objectID": "get_transactions.html#notes",
    "href": "get_transactions.html#notes",
    "title": "📄 GET /get_transactions",
    "section": "",
    "text": "Returns an array of transactions sorted chronologically (if implemented in your backend).\nYou must include a valid Bearer token to access this endpoint.\nReturns an appropriate error if the account does not exist or is not accessible by the caller.\nAccount locking is not required since this is a read-only operation.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Transactions"
    ]
  },
  {
    "objectID": "get_transactions.html#sponsors",
    "href": "get_transactions.html#sponsors",
    "title": "📄 GET /get_transactions",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Get Transactions"
    ]
  },
  {
    "objectID": "set_due_date.html",
    "href": "set_due_date.html",
    "title": "📅 POST /set_due_date",
    "section": "",
    "text": "Assigns or updates the due date of a grandchild account. Useful for managing financial obligations such as rent, loan payments, or bill deadlines.\n\n\n\n\nMethod: POST\n\nURL: /set_due_date\n\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/x-www-form-urlencoded\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\ndue_date\nstring\n✅\nDue date in ISO format (YYYY-MM-DD or YYYY-MM-DDTHH:MM:SSZ)\n\n\n\n\n\n\n\n{\n  \"uuid\": \"acc-5678\",\n  \"due_date\": \"2025-08-15T00:00:00Z\"\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Due date set for Internet\",\n  \"uuid\": \"acc-5678\",\n  \"due_date\": \"2025-08-15 00:00:00\",\n  \"start_time\": \"2025-07-10T10:45:15.001Z\",\n  \"end_time\": \"2025-07-10T10:45:15.020Z\",\n  \"execution_time\": 0.019\n}\n\n\n\n\n\n\n\n\nStatus\nDescription\n\n\n\n\n400\nUUID or due date missing, or due date has invalid format\n\n\n403\nNot a grandchild account or unauthorized access\n\n\n404\nAccount tree not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\n\nThis endpoint only works on accounts inheriting from GrandchildAccount.\n\nThe due date must be a valid date string, preferably in ISO format (e.g., \"2025-08-01\" or \"2025-08-01T00:00:00Z\").\n\nUse in conjunction with scheduled alerts, arrears tracking, or automated reminders.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Due Date"
    ]
  },
  {
    "objectID": "set_due_date.html#summary",
    "href": "set_due_date.html#summary",
    "title": "📅 POST /set_due_date",
    "section": "",
    "text": "Method: POST\n\nURL: /set_due_date\n\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Due Date"
    ]
  },
  {
    "objectID": "set_due_date.html#headers",
    "href": "set_due_date.html#headers",
    "title": "📅 POST /set_due_date",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/x-www-form-urlencoded",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Due Date"
    ]
  },
  {
    "objectID": "set_due_date.html#form-parameters",
    "href": "set_due_date.html#form-parameters",
    "title": "📅 POST /set_due_date",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the grandchild account\n\n\ndue_date\nstring\n✅\nDue date in ISO format (YYYY-MM-DD or YYYY-MM-DDTHH:MM:SSZ)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Due Date"
    ]
  },
  {
    "objectID": "set_due_date.html#example-request",
    "href": "set_due_date.html#example-request",
    "title": "📅 POST /set_due_date",
    "section": "",
    "text": "{\n  \"uuid\": \"acc-5678\",\n  \"due_date\": \"2025-08-15T00:00:00Z\"\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Due date set for Internet\",\n  \"uuid\": \"acc-5678\",\n  \"due_date\": \"2025-08-15 00:00:00\",\n  \"start_time\": \"2025-07-10T10:45:15.001Z\",\n  \"end_time\": \"2025-07-10T10:45:15.020Z\",\n  \"execution_time\": 0.019\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Due Date"
    ]
  },
  {
    "objectID": "set_due_date.html#error-responses",
    "href": "set_due_date.html#error-responses",
    "title": "📅 POST /set_due_date",
    "section": "",
    "text": "Status\nDescription\n\n\n\n\n400\nUUID or due date missing, or due date has invalid format\n\n\n403\nNot a grandchild account or unauthorized access\n\n\n404\nAccount tree not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Due Date"
    ]
  },
  {
    "objectID": "set_due_date.html#notes",
    "href": "set_due_date.html#notes",
    "title": "📅 POST /set_due_date",
    "section": "",
    "text": "This endpoint only works on accounts inheriting from GrandchildAccount.\n\nThe due date must be a valid date string, preferably in ISO format (e.g., \"2025-08-01\" or \"2025-08-01T00:00:00Z\").\n\nUse in conjunction with scheduled alerts, arrears tracking, or automated reminders.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Due Date"
    ]
  },
  {
    "objectID": "set_due_date.html#sponsors",
    "href": "set_due_date.html#sponsors",
    "title": "📅 POST /set_due_date",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Due Date"
    ]
  },
  {
    "objectID": "login.html#sponsors",
    "href": "login.html#sponsors",
    "title": "Finance Manager API",
    "section": "💖 Sponsors",
    "text": "💖 Sponsors\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "🔐 Auth",
      "Login"
    ]
  },
  {
    "objectID": "move_balance.html",
    "href": "move_balance.html",
    "title": "🔁 POST /move_balance",
    "section": "",
    "text": "Transfers a specified amount from one account to another.\n\n\n\n\nMethod: POST\nURL: /move_balance\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nfrom_uuid\nstring\n✅\nUUID of the source account\n\n\nto_uuid\nstring\n✅\nUUID of the destination account\n\n\namount\nnumber\n✅\nAmount to transfer (must be &gt; 0)\n\n\n\n\n\n\n\n{\n  \"from_uuid\": \"acc-2024-abc\",\n  \"to_uuid\": \"acc-2024-def\",\n  \"amount\": 2500\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Moved 2500 from Emergency to Farming\",\n  \"from_uuid\": \"acc-2024-abc\",\n  \"to_uuid\": \"acc-2024-def\",\n  \"amount\": 2500,\n  \"start_time\": \"2025-07-10T12:42:15.155Z\",\n  \"end_time\": \"2025-07-10T12:42:15.190Z\",\n  \"execution_time\": 0.035\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nMissing or invalid amount\n\n\n400\nMissing from_uuid or to_uuid\n\n\n404\nSource or target account not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\nThis action internally calls from_account$move_balance().\nThe operation is atomic and wrapped in a file lock for consistency.\nWill fail if source or target account doesn’t exist, or if balance is insufficient.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Move Balance"
    ]
  },
  {
    "objectID": "move_balance.html#summary",
    "href": "move_balance.html#summary",
    "title": "🔁 POST /move_balance",
    "section": "",
    "text": "Method: POST\nURL: /move_balance\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Move Balance"
    ]
  },
  {
    "objectID": "move_balance.html#headers",
    "href": "move_balance.html#headers",
    "title": "🔁 POST /move_balance",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Move Balance"
    ]
  },
  {
    "objectID": "move_balance.html#request-parameters",
    "href": "move_balance.html#request-parameters",
    "title": "🔁 POST /move_balance",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nfrom_uuid\nstring\n✅\nUUID of the source account\n\n\nto_uuid\nstring\n✅\nUUID of the destination account\n\n\namount\nnumber\n✅\nAmount to transfer (must be &gt; 0)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Move Balance"
    ]
  },
  {
    "objectID": "move_balance.html#example-request",
    "href": "move_balance.html#example-request",
    "title": "🔁 POST /move_balance",
    "section": "",
    "text": "{\n  \"from_uuid\": \"acc-2024-abc\",\n  \"to_uuid\": \"acc-2024-def\",\n  \"amount\": 2500\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Move Balance"
    ]
  },
  {
    "objectID": "move_balance.html#success-response",
    "href": "move_balance.html#success-response",
    "title": "🔁 POST /move_balance",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Moved 2500 from Emergency to Farming\",\n  \"from_uuid\": \"acc-2024-abc\",\n  \"to_uuid\": \"acc-2024-def\",\n  \"amount\": 2500,\n  \"start_time\": \"2025-07-10T12:42:15.155Z\",\n  \"end_time\": \"2025-07-10T12:42:15.190Z\",\n  \"execution_time\": 0.035\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Move Balance"
    ]
  },
  {
    "objectID": "move_balance.html#failure-response-examples",
    "href": "move_balance.html#failure-response-examples",
    "title": "🔁 POST /move_balance",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nMissing or invalid amount\n\n\n400\nMissing from_uuid or to_uuid\n\n\n404\nSource or target account not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Move Balance"
    ]
  },
  {
    "objectID": "move_balance.html#notes",
    "href": "move_balance.html#notes",
    "title": "🔁 POST /move_balance",
    "section": "",
    "text": "This action internally calls from_account$move_balance().\nThe operation is atomic and wrapped in a file lock for consistency.\nWill fail if source or target account doesn’t exist, or if balance is insufficient.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Move Balance"
    ]
  },
  {
    "objectID": "move_balance.html#sponsors",
    "href": "move_balance.html#sponsors",
    "title": "🔁 POST /move_balance",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Move Balance"
    ]
  },
  {
    "objectID": "set_child_allocation.html",
    "href": "set_child_allocation.html",
    "title": "🧩 POST /set_child_allocation",
    "section": "",
    "text": "Update the allocation assigned to a child account under a parent.\n\n\n\n\nMethod: POST\nURL: /set_child_allocation\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nparent_uuid\nstring\n✅\nUUID of the parent account\n\n\nchild_name\nstring\n✅\nName of the child account\n\n\nallocation\nfloat\n✅\nNew allocation value (must be between 0 and 1)\n\n\n\n\n\n\n\n{\n  \"parent_uuid\": \"main-2023-001\",\n  \"child_name\": \"Goals\",\n  \"allocation\": 0.35\n}\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Allocation for Goals updated to 0.35\",\n  \"total_allocation\": 1,\n  \"start_time\": \"2025-07-10T11:01:14.120Z\",\n  \"end_time\": \"2025-07-10T11:01:14.215Z\",\n  \"execution_time\": 0.095\n}\n\n\n\n\n\n\nStatus\nError Reason\n\n\n\n\n400\nAllocation missing or invalid\n\n\n404\nParent or child account not found\n\n\n500\nServer-side exception occurred\n\n\n\n\n\n\n\nThe parent account must already exist and contain the named child.\nThe total allocation across all children may be validated depending on internal logic.\nSafely locked and persisted to account_tree.Rds.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Child Allocations"
    ]
  },
  {
    "objectID": "set_child_allocation.html#summary",
    "href": "set_child_allocation.html#summary",
    "title": "🧩 POST /set_child_allocation",
    "section": "",
    "text": "Method: POST\nURL: /set_child_allocation\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Child Allocations"
    ]
  },
  {
    "objectID": "set_child_allocation.html#headers",
    "href": "set_child_allocation.html#headers",
    "title": "🧩 POST /set_child_allocation",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Child Allocations"
    ]
  },
  {
    "objectID": "set_child_allocation.html#request-parameters",
    "href": "set_child_allocation.html#request-parameters",
    "title": "🧩 POST /set_child_allocation",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nparent_uuid\nstring\n✅\nUUID of the parent account\n\n\nchild_name\nstring\n✅\nName of the child account\n\n\nallocation\nfloat\n✅\nNew allocation value (must be between 0 and 1)",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Child Allocations"
    ]
  },
  {
    "objectID": "set_child_allocation.html#example-request",
    "href": "set_child_allocation.html#example-request",
    "title": "🧩 POST /set_child_allocation",
    "section": "",
    "text": "{\n  \"parent_uuid\": \"main-2023-001\",\n  \"child_name\": \"Goals\",\n  \"allocation\": 0.35\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Child Allocations"
    ]
  },
  {
    "objectID": "set_child_allocation.html#success-response",
    "href": "set_child_allocation.html#success-response",
    "title": "🧩 POST /set_child_allocation",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"message\": \"Allocation for Goals updated to 0.35\",\n  \"total_allocation\": 1,\n  \"start_time\": \"2025-07-10T11:01:14.120Z\",\n  \"end_time\": \"2025-07-10T11:01:14.215Z\",\n  \"execution_time\": 0.095\n}",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Child Allocations"
    ]
  },
  {
    "objectID": "set_child_allocation.html#failure-responses",
    "href": "set_child_allocation.html#failure-responses",
    "title": "🧩 POST /set_child_allocation",
    "section": "",
    "text": "Status\nError Reason\n\n\n\n\n400\nAllocation missing or invalid\n\n\n404\nParent or child account not found\n\n\n500\nServer-side exception occurred",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Child Allocations"
    ]
  },
  {
    "objectID": "set_child_allocation.html#notes",
    "href": "set_child_allocation.html#notes",
    "title": "🧩 POST /set_child_allocation",
    "section": "",
    "text": "The parent account must already exist and contain the named child.\nThe total allocation across all children may be validated depending on internal logic.\nSafely locked and persisted to account_tree.Rds.",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Child Allocations"
    ]
  },
  {
    "objectID": "set_child_allocation.html#sponsors",
    "href": "set_child_allocation.html#sponsors",
    "title": "🧩 POST /set_child_allocation",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📤 POST Endpoints",
      "Set Child Allocations"
    ]
  },
  {
    "objectID": "compute_total_due.html",
    "href": "compute_total_due.html",
    "title": "💰 GET /compute_total_due",
    "section": "",
    "text": "Returns the total amount due for a given account including its children and descendants.\n\n\n\n\nMethod: GET\nURL: /compute_total_due\nAuth: Required\nTag: accounts\n\n\n\n\n\nAuthorization: Bearer &lt;your-token&gt;\nContent-Type: application/json\n\n\n\n\n\n\n\nName\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to evaluate due for\n\n\n\n\n\n\n\nGET /compute_total_due?uuid=acc-2024-456\n\n\n\n{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-456\",\n  \"total_due\": 3400.50,\n  \"start_time\": \"2025-07-10T13:11:05.123Z\",\n  \"end_time\": \"2025-07-10T13:11:05.189Z\",\n  \"execution_time\": 0.07\n}\n\n\n\n\n\n\nStatus\nReason\n\n\n\n\n400\nMissing or invalid UUID\n\n\n403\nUnauthorized to access the account\n\n\n404\nAccount not found\n\n\n500\nInternal server error\n\n\n\n\n\n\n\nInternally calls account$compute_total_due(), which traverses down the account hierarchy.\nThis endpoint is useful for summarizing all upcoming obligations related to a specific category like “Utilities” or “Loans”.\nIt performs a read-only operation — no locking needed.\n\n\n\n\n\nSupport my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Due"
    ]
  },
  {
    "objectID": "compute_total_due.html#summary",
    "href": "compute_total_due.html#summary",
    "title": "💰 GET /compute_total_due",
    "section": "",
    "text": "Method: GET\nURL: /compute_total_due\nAuth: Required\nTag: accounts",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Due"
    ]
  },
  {
    "objectID": "compute_total_due.html#headers",
    "href": "compute_total_due.html#headers",
    "title": "💰 GET /compute_total_due",
    "section": "",
    "text": "Authorization: Bearer &lt;your-token&gt;\nContent-Type: application/json",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Due"
    ]
  },
  {
    "objectID": "compute_total_due.html#request-parameters",
    "href": "compute_total_due.html#request-parameters",
    "title": "💰 GET /compute_total_due",
    "section": "",
    "text": "Name\nType\nRequired\nDescription\n\n\n\n\nuuid\nstring\n✅\nUUID of the account to evaluate due for",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Due"
    ]
  },
  {
    "objectID": "compute_total_due.html#example-request",
    "href": "compute_total_due.html#example-request",
    "title": "💰 GET /compute_total_due",
    "section": "",
    "text": "GET /compute_total_due?uuid=acc-2024-456",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Due"
    ]
  },
  {
    "objectID": "compute_total_due.html#success-response",
    "href": "compute_total_due.html#success-response",
    "title": "💰 GET /compute_total_due",
    "section": "",
    "text": "{\n  \"success\": true,\n  \"status\": 200,\n  \"uuid\": \"acc-2024-456\",\n  \"total_due\": 3400.50,\n  \"start_time\": \"2025-07-10T13:11:05.123Z\",\n  \"end_time\": \"2025-07-10T13:11:05.189Z\",\n  \"execution_time\": 0.07\n}",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Due"
    ]
  },
  {
    "objectID": "compute_total_due.html#failure-response-examples",
    "href": "compute_total_due.html#failure-response-examples",
    "title": "💰 GET /compute_total_due",
    "section": "",
    "text": "Status\nReason\n\n\n\n\n400\nMissing or invalid UUID\n\n\n403\nUnauthorized to access the account\n\n\n404\nAccount not found\n\n\n500\nInternal server error",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Due"
    ]
  },
  {
    "objectID": "compute_total_due.html#notes",
    "href": "compute_total_due.html#notes",
    "title": "💰 GET /compute_total_due",
    "section": "",
    "text": "Internally calls account$compute_total_due(), which traverses down the account hierarchy.\nThis endpoint is useful for summarizing all upcoming obligations related to a specific category like “Utilities” or “Loans”.\nIt performs a read-only operation — no locking needed.",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Due"
    ]
  },
  {
    "objectID": "compute_total_due.html#sponsors",
    "href": "compute_total_due.html#sponsors",
    "title": "💰 GET /compute_total_due",
    "section": "",
    "text": "Support my work through GitHub Sponsors!\n\n\n\nGitHub Sponsors",
    "crumbs": [
      "Home",
      "📥 GET Endpoints",
      "Compute Total Due"
    ]
  }
]