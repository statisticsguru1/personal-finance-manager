name: R CI

on:
  push:
    branches: [main, refactor-main-account-docs]
  pull_request:
    branches: [main, refactor-main-account-docs]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      R_LIBS_USER: ${{ github.workspace }}/.Rlibrary
      TZ: UTC
      _R_CHECK_SYSTEM_CLOCK_: FALSE
      NOT_CRAN: true

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libgit2-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: ${{ runner.os }}-r-

      - name: Install package dependencies
        run: |
          install.packages(c("devtools", "remotes","tidyverse"), repos = "https://cloud.r-project.org")
          devtools::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Lint code
        run: |
          install.packages("lintr", repos = "https://cloud.r-project.org")
          lintr::lint_package()
        shell: Rscript {0}

      - name: Run tests
        run: |
          install.packages("testthat", repos = "https://cloud.r-project.org")
          devtools::test()
        shell: Rscript {0}

      - name: Check code (CRAN-style)
        run: |
          devtools::check()
        shell: Rscript {0}

      - name: Test coverage
        run: |
          install.packages("covr", repos = "https://cloud.r-project.org")
          covr::codecov()
        shell: Rscript {0}
