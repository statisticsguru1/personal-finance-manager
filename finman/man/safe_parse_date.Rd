% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{safe_parse_date}
\alias{safe_parse_date}
\title{Safely Parse Flexible Date Inputs}
\usage{
safe_parse_date(x, tz = "UTC")
}
\arguments{
\item{x}{A date input. Accepts:
* `POSIXct`: returned unchanged
* `Date`: coerced to `POSIXct`
* `character`: parsed with multiple orders (`ymd`, `dmy`, `mdy` with optional
hour-minute-second extensions)}

\item{tz}{Timezone to apply when parsing (default `"UTC"`).}
}
\value{
A `POSIXct` object representing the parsed date.
}
\description{
This helper attempts to robustly coerce various date-like inputs into a
standardized `POSIXct` object. It is designed for user-facing APIs where
dates may arrive in different formats (character, `Date`, or `POSIXct`).
}
\details{
Supported formats include common ISO and ambiguous styles, for example:
- `"2025-11-16"` → `2025-11-16 UTC`
- `"11-16-2025"` → `2025-11-16 UTC`
- `"16/11/2025 14:30"` → `2025-11-16 14:30 UTC`
- `"Nov 16 2025 14:30:15"` → `2025-11-16 14:30:15 UTC`

If a vector of inputs is provided, only the first element is parsed.
If `NULL`, empty, or `NA`, the current system time is returned.
}
\examples{
safe_parse_date("2025-11-16")
safe_parse_date("11/16/2025 14:30")
safe_parse_date(Sys.Date())
safe_parse_date(Sys.time())

}
\seealso{
[lubridate::parse_date_time()]
}
