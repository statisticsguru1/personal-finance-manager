% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{remove_account}
\alias{remove_account}
\title{Remove an Account (Main or Sub-Account)}
\usage{
remove_account(tree, user_id, uuid)
}
\arguments{
\item{tree}{An R6 account tree object (e.g., created via
\code{MainAccount$new()}).}

\item{user_id}{Character string. The unique identifier of the user who
owns the account tree. Used to locate and delete the user's
persisted file.}

\item{uuid}{Character string. The UUID of the account to be removed.}
}
\value{
Logical \code{TRUE} if the account was successfully removed.
  Throws an error if the account or its parent cannot be found.
}
\description{
Deletes an account from the account tree.
If the \code{uuid} matches the main/root account, the user's entire
account file is removed. Otherwise, the function locates the target
account within the tree and removes it from its parent.
}
\details{
- If the UUID corresponds to the main/root account:
  \itemize{
    \item The user's \code{"account_tree.Rds"} file is deleted from
          persistent storage.
  }
- If the UUID corresponds to a sub-account:
  \itemize{
    \item The target account is located via
          \code{tree$find_account_by_uuid(uuid)}.
    \item Its parent is identified, and the child is removed from
          \code{parent$child_accounts}.
    \item The updated tree is saved back to persistent storage with
          \code{save_user_file()}.
  }
}
\examples{
\dontrun{
library(finman)

# Create a main account
main <- MainAccount$new("Main")

# Add a sub-account
needs <- ChildAccount$new("Needs", allocation = 0.5)
main$add_child_account(needs)

# Add a grandchild account
rent <- GrandchildAccount$new(
  "Rent", allocation = 0.3, fixed_amount = 7500,
  account_type = "Bill", freq = 30, due_date = Sys.Date() + 30
)
needs$add_child_account(rent)

# Persist the account tree
save_user_file("user123", main, "account_tree.Rds")

# Remove the grandchild account by uuid
remove_account(main, "user123", rent$uuid)

# Remove the main account (deletes the file)
remove_account(main, "user123", main$uuid)
}
}
\seealso{
[find_account_by_uuid()], [save_user_file()]
}
