% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{with_lock_mongo}
\alias{with_lock_mongo}
\title{Acquire a MongoDB-Based Lock for a User's Account Tree}
\usage{
with_lock_mongo(
  user_id,
  expr,
  db,
  uri,
  collection = "user_accounts",
  file_name = "account_tree.Rds",
  timeout = 1800
)
}
\arguments{
\item{user_id}{The user ID whose account tree should be locked.}

\item{expr}{An expression to evaluate once the lock has been acquired.}

\item{db}{The MongoDB database name.}

\item{uri}{The MongoDB connection URI.}

\item{collection}{The collection used to store lock metadata.
Default is \code{"accounts"}.}

\item{file_name}{Logical identifier for the locked resource.
Default is \code{"account_tree"}.}

\item{timeout}{Maximum time in seconds to wait for the lock before failing.
Default is 1800 seconds (30 minutes).}
}
\value{
The result of evaluating \code{expr} once the lock is acquired.
}
\description{
Provides exclusive access to a user's account tree using a MongoDB collection
as the locking mechanism. A document in the collection is updated atomically
to indicate that the account tree is locked by a specific process. Other
processes wait until the lock is released or a timeout is reached.
}
\details{
The lock is implemented by atomically updating a MongoDB document
with \code{lock = false} to set \code{lock = true}, along with the process ID
and a timestamp.

If another process already holds the lock, this function retries until either
the lock is acquired or the timeout is reached.

When the expression finishes (normally or due to an error), the lock is
automatically released via \code{on.exit()}, ensuring the document is reset
to \code{lock = false}.
}
\examples{
\dontrun{
# Run a critical section safely under a MongoDB lock
result <- with_lock_mongo(
  user_id = "user123",
  expr = {
    account <- load_from_mongo("user123", "account_tree",
                               db = "mydb", uri = "mongodb://localhost")
    account$balance <- account$balance + 100
    save_to_mongo("user123", account, "account_tree",
                  db = "mydb", uri = "mongodb://localhost")
    account$balance
  },
  db = "mydb",
  uri = "mongodb://localhost"
)
}

}
